sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))
}
ci <- function(x, ...) {
1.96 * sd(x, na.rm = TRUE)
}
# load design file - no source tanks
design.ns <- read.csv("../data/CSI_Design_ENV_NoSourceTanks.csv", row.names=1)
head(design.ns)
str(design.ns)
dim(design.ns)
# load design file - with source tanks but missing decomp, nutrients, sreal, Date2 columns
design.full <- read.csv("../data/design_CSI.csv", row.names=1)
design.full <- design.full[-c(grep("mock community", design.full$CSI_ID)), ]
dim(design.full)
# load OTU file
csi_otu <- read.otu("../data/CSI.shared")
dim(csi_otu)
# remove extra site (no mock community)
# design with source tanks
missing <- setdiff(rownames(design.full), rownames(csi_otu))
design.full <- design.full[-(which(rownames(design.full) == missing)), ]
dim(design.full)
# OTU table - remove otu's w/ < 2 occurrences across all sites
otu_removal <- csi_otu[, which(colSums(csi_otu) >= 2)]
dim(otu_removal)
aa <- (rowSums(otu_removal))
aa # CSI033-7180 reads CSI101=75 reads - removed
# OTU table - removed low abundance samples
csi_low_remov <- otu_removal[which(rowSums(otu_removal) >= 13000), ]
dim(csi_low_remov)
# OTU table - odd sites in bacterial composition data and remove in design file
odd.sites <- c("CSI033","CSI101")
otu_final <- csi_low_remov[setdiff(rownames(csi_low_remov), odd.sites), ]
design_final <- design.full[setdiff(rownames(design.full), odd.sites), ]
design.ns <- design.ns[setdiff(rownames(design.ns), odd.sites), ]
all.equal(rownames(design_final), rownames(otu_final))
# create presence/absence and relative abundance matrices
csi_pres_abs <- (otu_final > 0) * 1
csi_relabun <- otu_final
for (i in 1:dim(otu_final)[1]) {
csi_relabun[i, ] <- otu_final[i, ]/sum(otu_final[i,
])
}
# import taxonomy file for later
csi_tax <- read.tax(taxonomy = "../data/CSI.0.03.cons.taxonomy", format = "rdp", tax.levels = 6, col.tax = 3)
# bind design and bact files
csi.full <- cbind(design_final,csi_relabun)
# df <- decostand(csi_relabun, method="standardize")
# NOTE need to specify method.. not sure if this one is right - do not need to run decostand b/c relative abundance calculated manually in lines 99-101
# REMOVE source tanks from otu file
# REMOVE source tanks Number 1,2,3 from otu_final and use design.ns (manually removed source tanks)
temp <- rownames(design_final[which(design_final$Number %in% c(1,2,3)), ])
otu_final.ns <- otu_final[-(which(rownames(otu_final) %in% temp)), ]
dim(otu_final.ns)
dim(design.ns)
#drop missing data
missing <- setdiff(rownames(design.ns), rownames(otu_final.ns))
design.ns2 <- design.ns[-(which(rownames(design.ns) == missing)), ]
dim(design.ns2)
# Drop levels of factors that are no longer in data set
design.ns.final <- droplevels(design.ns2)
all.equal(rownames(design.ns2), rownames(otu_final.ns))
# Set treatments
treatments1 <- as.factor(design.ns.final$Salinity)
levels(treatments1) <- c("0","5","9","13")
treatments2 <- as.factor(design.ns.final$Dispersal)
levels(treatments2) <- c("2","3")
date_1 <- as.factor(design.ns.final$Date2)
# Rarefy Abundances (min abundance is 13,240. We are sampling to 13,000)
min(rowSums(otu_final.ns))
otu.rarefy <- rrarefy(otu_final.ns, 13000)
# Calculate Shannon H' (called shannon) using full data set (WITH source tanks)
shannon <- diversity(otu.rarefy, "shannon")
# Species Richness
richness <- rowSums((otu.rarefy >= 1))
# Pielouâs evenness
J <- shannon/log(specnumber(otu.rarefy[,-c(1:1)]))
# Dombined design,shannon,richness,evenness - no source tanks
csi_otu.div <- cbind(design.ns.final,shannon,richness,J)
# run full parametric statistical model
shannon.lm <- lm(shannon ~ Dispersal*Salinity*Date+Dispersal*Salinity+Salinity*Date+Dispersal*Date+Dispersal+Salinity+Date, data = csi_otu.div)
shannon.lm
anova(shannon.lm)
# run linear regression measured salinity used instead of 'factor' salinity
shannon.reg <- lm(shannon~Salinity_real, data = csi_otu.div)
summary(shannon.reg)
## maybe use Werba code - discuss with Jo and McCoy
# Graphing Shannon Diversity - Treatment Salinity
p <- ggplot(csi_otu.div, aes(x=Salinity, y=shannon, color=Dispersal))+geom_point()
p1=p+geom_smooth(method="lm",aes(fill=Dispersal))
p1 + theme_bw()
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1.25)) + theme(axis.ticks.length=unit(0.3,"cm")) + xlab("Salinity") + ylab("Shannon Diversity Index (H')")
ggsave("../figures/shannon.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
# Graphing Shannon Diversity x MEASURED Salinity
p <- ggplot(csi_otu.div, aes(x=Salinity_real, y=shannon, color=Dispersal))+geom_point()
p1=p+geom_smooth(method="lm",aes(fill=Dispersal))
p1 + theme_bw()
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1.25)) + theme(axis.ticks.length=unit(0.3,"cm")) + xlab("Salinity (measured)") + ylab("Shannon Diversity Index (H')")
ggsave("../figures/shannon_SalReal.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
# run full parametric statistical model
J.lm <- lm(J ~ Dispersal*Salinity*Date+Dispersal*Salinity+Salinity*Date+Dispersal*Date+Dispersal+Salinity+Date, data = csi_otu.div)
J.lm
anova(J.lm)
# run linear regression measured salinity used instead of 'factor' salinity
J.reg <- lm(J~Salinity_real, data = csi_otu.div)
summary(J.reg)
# Graphing Pielous J - Treatment Salinity
p <- ggplot(csi_otu.div, aes(x=Salinity, y=J, color=Dispersal))+geom_point()
p1=p+geom_smooth(method="lm",aes(fill=Dispersal))
p1 + theme_bw()
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1.25)) + theme(axis.ticks.length=unit(0.3,"cm")) + xlab("Salinity") + ylab("Pielou's J")
ggsave("../figures/pielousj.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
# Graphing Pielous J x MEASURED Salinity
p <- ggplot(csi_otu.div, aes(x=Salinity_real, y=J, color=Dispersal))+geom_point()
p1=p+geom_smooth(method="lm",aes(fill=Dispersal))
p1 + theme_bw()
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1.25)) + theme(axis.ticks.length=unit(0.3,"cm")) + xlab("Salinity (measured)") + ylab("Pielou's J")
ggsave("../figures/pielouj_SalReal.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
# run full parametric statistical model
richness.lm <- lm(richness ~ Dispersal*Salinity*Date+Dispersal*Salinity+Salinity*Date+Dispersal*Date+Dispersal+Salinity+Date, data = csi_otu.div)
richness.lm
anova(richness.lm)
# run linear regression measured salinity used instead of 'factor' salinity
richness.reg <- lm(richness~Salinity_real, data = csi_otu.div)
summary(richness.reg)
# Graphing richness - Treatment Salinity
p <- ggplot(csi_otu.div, aes(x=Salinity, y=richness, color=Dispersal))+geom_point()
p1=p+geom_smooth(method="lm",aes(fill=Dispersal))
p1 + theme_bw()
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1.25)) + theme(axis.ticks.length=unit(0.3,"cm")) + xlab("Salinity") + ylab("richness")
ggsave("../figures/richness.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
# Graphing richness x MEASURED Salinity
p <- ggplot(csi_otu.div, aes(x=Salinity_real, y=shannon, color=Dispersal))+geom_point()
p1=p+geom_smooth(method="lm",aes(fill=Dispersal))
p1 + theme_bw()
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1.25)) + theme(axis.ticks.length=unit(0.3,"cm")) + xlab("Salinity (measured)") + ylab("richness")
ggsave("../figures/richness_SalReal.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
carbon_min <- read.csv("../data/Cmin-data.csv")
carbon_min
carbon_min <- read.csv("../data/Cmin-data.csv")
carbon_min
carbon.lm <- lm((carbon_min(ngCO2C_mL_day)) ~ Dispersal + Salinity + Dispersal*Salinity, data = carbon_min)
carbon.lm <- lm(ngCO2C_mL_day ~ Dispersal + Salinity + Dispersal*Salinity, data = carbon_min)
anova(carbon.lm)
carbon.lm
anova(carbon.lm)
p <- ggplot(csi_otu.div, aes(x=Salinity, y=ngCO2C_mL_day, color=Dispersal))+geom_point()
p1=p+geom_smooth(method="lm",aes(fill=Dispersal))
p1 + theme_bw()
p <- ggplot(csi_otu.div, aes(data=carbon_min, x=Salinity, y=ngCO2C_mL_day, color=Dispersal))+geom_point()
p1=p+geom_smooth(method="lm",aes(fill=Dispersal))
p1 + theme_bw()
carbon_min
p <- ggplot(csi_otu.div, aes(x=Salinity, y=ngCO2C_mL_day, color=Dispersal))+geom_point()
p1=p+geom_smooth(method="lm",aes(fill=Dispersal))
p1 + theme_bw()
p <- ggplot(csi_otu.div, aes(x=Salinity, y=carbon_min(ngCO2C_mL_day), color=Dispersal))+geom_point()
p1=p+geom_smooth(method="lm",aes(fill=Dispersal))
p1 + theme_bw()
carbon.lm <- lm(ngCO2C_mL_day ~ Dispersal + Salinity + Dispersal*Salinity, data = carbon_min)
anova(carbon.lm)
p <- ggplot(carbon_min, aes(x=Salinity, y=ngCO2C_mL_day, color=Dispersal))+geom_point()
p1=p+geom_smooth(method="lm",aes(fill=Dispersal))
p1 + theme_bw()
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1.25)) + theme(axis.ticks.length=unit(0.3,"cm")) + xlab("Salinity") + ylab("Carbon Mineralization (ng CO2 / mL / day)")
ggsave("../figures/carbon_mineralization.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
p <- ggplot(carbon_min, aes(x=Salinity, y=ngCO2C_mL_day, color=Dispersal))+geom_point()
p1=p+geom_smooth(method="lm",aes(fill=Dispersal))
p1 + theme_bw()
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1.25)) + theme(axis.ticks.length=unit(0.3,"cm")) + xlab("Salinity") + ylab("Carbon Mineralization (ng CO2/mL/day)")
ggsave("../figures/carbon_mineralization.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
p <- ggplot(carbon_min, aes(x=Salinity, y=ngCO2C_mL_day, color=Dispersal))+geom_point()
p1=p+geom_smooth(method="lm",aes(fill=Dispersal))
p1 + theme_bw()
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=12,face="bold"), axis.text=element_text(size=10), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=10), panel.border = element_rect(colour = "black",size=1.25)) + theme(axis.ticks.length=unit(0.3,"cm")) + xlab("Salinity") + ylab("Carbon Mineralization (ng CO2/mL/day)")
ggsave("../figures/carbon_mineralization.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
p <- ggplot(carbon_min, aes(x=Salinity, y=ngCO2C_mL_day, color=Dispersal))+geom_point()
p1=p+geom_smooth(method="lm",aes(fill=Dispersal))
p1 + theme_bw()
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=10,face="bold"), axis.text=element_text(size=8), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=8), panel.border = element_rect(colour = "black",size=1.25)) + theme(axis.ticks.length=unit(0.3,"cm")) + xlab("Salinity") + ylab("Carbon Mineralization (ng CO2/mL/day)")
ggsave("../figures/carbon_mineralization.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
anova(carbon.lm)
p <- ggplot(carbon_min, aes(x=Salinity, y=ngCO2C_mL_day, color=Dispersal))+geom_point()
p1=p+geom_smooth(method="lm",aes(fill=Dispersal))
p1 + theme_bw()
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=10,face="bold"), axis.text=element_text(size=8), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=8), panel.border = element_rect(colour = "black",size=1.25)) + theme(axis.ticks.length=unit(0.3,"cm")) + xlab("Salinity") + ylab("Carbon Mineralization (ng CO2/mL/day)")
carbon.lm <- lm(ngCO2C_mL_day ~ Dispersal + Salinity + Dispersal*Salinity, data = carbon_min)
carbon.lm
summary(J.reg)
carbon.reg <- lm(ngCO2C_mL_day~Salinity, data = carbon_min)
summary(carbon.reg)
carbon_min <- read.csv("../data/Cmin-data-NO-SOURCE.csv")
carbon2.lm <- lm(ngCO2C_mL_day ~ Dispersal + Salinity + Dispersal*Salinity, data = carbon_min)
anova(carbon2.lm)
# run linear regression (must use 'factor' salinity -- don't have real salinity for these tanks/samples)
carbon2.reg <- lm(ngCO2C_mL_day~Salinity, data = carbon_min)
summary(carbon2.reg)
carbon2_min <- read.csv("../data/Cmin-data-NO-SOURCE.csv")
carbon2.lm <- lm(ngCO2C_mL_day ~ Dispersal + Salinity + Dispersal*Salinity, data = carbon_min)
anova(carbon2.lm)
carbon2.reg <- lm(ngCO2C_mL_day~Salinity, data = carbon_min)
summary(carbon2.reg)
p <- ggplot(carbon2_min, aes(x=Salinity, y=ngCO2C_mL_day, color=Dispersal))+geom_point()
p1=p+geom_smooth(method="lm",aes(fill=Dispersal))
p1 + theme_bw()
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=10,face="bold"), axis.text=element_text(size=8), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=8), panel.border = element_rect(colour = "black",size=1.25)) + theme(axis.ticks.length=unit(0.3,"cm")) + xlab("Salinity") + ylab("Carbon Mineralization (ng CO2/mL/day)")
ggsave("../figures/carbon_mineralization_nosource.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
rm(list = ls())
source("../bin/DiversityFunctions.R")
source("../bin/MothurTools.R")
require("vegan")
require("vegan")
require("dplyr")
require("nlme")
require("reshape2")
require("ecodist")
require("ggplot2")
require("ade4")
require("png")
require("MASS")
require("grid")
require("ape")
require("png")
require("picante")
se <- function(x, ...) {
sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))
}
ci <- function(x, ...) {
1.96 * sd(x, na.rm = TRUE)
}
design.ns <- read.csv("../data/CSI_Design_ENV_NoSourceTanks.csv", row.names=1)
head(design.ns)
str(design.ns)
dim(design.ns)
design.full <- read.csv("../data/design_CSI.csv", row.names=1)
design.full <- design.full[-c(grep("mock community", design.full$CSI_ID)), ]
dim(design.full)
csi_otu <- read.otu("../data/CSI.shared")
csi_otu <- read.otu("../data/CSI.shared")
dim(csi_otu)
dim(csi_otu)
missing <- setdiff(rownames(design.full), rownames(csi_otu))
design.full <- design.full[-(which(rownames(design.full) == missing)), ]
dim(design.full)
otu_removal <- csi_otu[, which(colSums(csi_otu) >= 2)]
dim(otu_removal)
aa <- (rowSums(otu_removal))
aa # CSI033-7180 reads CSI101=75 reads - removed
csi_low_remov <- otu_removal[which(rowSums(otu_removal) >= 13000), ]
dim(csi_low_remov)
odd.sites <- c("CSI033","CSI101")
otu_final <- csi_low_remov[setdiff(rownames(csi_low_remov), odd.sites), ]
design_final <- design.full[setdiff(rownames(design.full), odd.sites), ]
design.ns <- design.ns[setdiff(rownames(design.ns), odd.sites), ]
all.equal(rownames(design_final), rownames(otu_final))
csi_pres_abs <- (otu_final > 0) * 1
csi_relabun <- otu_final
for (i in 1:dim(otu_final)[1]) {
csi_relabun[i, ] <- otu_final[i, ]/sum(otu_final[i,
])
}
csi.full <- cbind(design_final,csi_relabun)
temp <- rownames(design_final[which(design_final$Number %in% c(1,2,3)), ])
otu_final.ns <- otu_final[-(which(rownames(otu_final) %in% temp)), ]
dim(otu_final.ns)
dim(design.ns)
missing <- setdiff(rownames(design.ns), rownames(otu_final.ns))
design.ns2 <- design.ns[-(which(rownames(design.ns) == missing)), ]
dim(design.ns2)
design.ns.final <- droplevels(design.ns2)
all.equal(rownames(design.ns2), rownames(otu_final.ns))
csi.ns <- cbind(design.ns.final,otu_final.ns)
treatments1 <- as.factor(design.ns.final$Salinity)
levels(treatments1) <- c("0","5","9","13")
treatments2 <- as.factor(design.ns.final$Dispersal)
levels(treatments2) <- c("2","3")
date_1 <- as.factor(design.ns.final$Date2)
sampleREL.dist1 <- vegdist(csi_relabun, method="bray")
CSI_pcoa1 <- cmdscale(sampleREL.dist1, k=3, eig=TRUE, add=FALSE)
explainvar1a <- round(CSI_pcoa1$eig[1] / sum(CSI_pcoa1$eig), 3) * 100
explainvar2a <- round(CSI_pcoa1$eig[2] / sum(CSI_pcoa1$eig), 3) * 100
sum.eiga <- sum(explainvar1a, explainvar2a)
explainvar1a
explainvar2a
all.equal(rownames(design_final), rownames(csi_relabun))
pcoa.groups <- paste(design_final$Date2, design_final$Salinity, sep = "_")
pcoa.points <- data.frame(CSI_pcoa1$points, group = pcoa.groups)
pcoa.L.centroids <- melt(pcoa.points, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids <- acast(pcoa.L.centroids, variable ~ group, mean)
pcoa.centroids.se <- acast(pcoa.L.centroids, variable ~ group, se)
pcoa.centroids.sd <- acast(pcoa.L.centroids, variable ~ group, sd)
pcoa.cent.dataframe <- cbind(t(pcoa.centroids), t(pcoa.centroids.se))
colnames(pcoa.cent.dataframe) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats <- rownames(pcoa.cent.dataframe)
pcoa.col <- as.factor(sapply(strsplit(pcoa.cent.treats, "_"), `[`, 2)) # Salinity
pcoa.shape <- as.factor(sapply(strsplit(pcoa.cent.treats, "_"), `[`, 1))  # Date2
df1a <- as.data.frame(pcoa.cent.dataframe)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=pcoa.col, shape = pcoa.shape,
group = interaction(pcoa.col, pcoa.shape))) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(labels = c("0","5","9","13"),
values = c("#FFFFFF", "#00FFFF", "#33CCCC", "#0066CC")) +
scale_fill_manual(labels = c("0","5","9","13"),
values = c("#FFFFFF", "#00FFFF", "#33CCCC", "#0066CC")) +
scale_shape_manual(labels = c("0","18","45"),
values = c(22, 21, 24)) +
coord_cartesian(xlim = c(-0.25, 0.5), ylim = c(-0.35, 0.3)) +
theme(axis.title = element_text(size=18), axis.text=element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (21.7%)") + ylab("PCoA 2 (6.6%)") +
labs(fill = "Salinity", shape = "Date") +
guides(fill = guide_legend(override.aes = list(pch=21, size = 4, colour="black")),
shape = guide_legend(override.aes = list(size = 4, fill="black")))
head(csi.full)
all.equal(rownames(design_final), rownames(csi_relabun))
pcoa.groups <- paste(design_final$Date, design_final$Salinity, sep = "_")
pcoa.points <- data.frame(CSI_pcoa1$points, group = pcoa.groups)
pcoa.L.centroids <- melt(pcoa.points, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids <- acast(pcoa.L.centroids, variable ~ group, mean)
pcoa.centroids.se <- acast(pcoa.L.centroids, variable ~ group, se)
pcoa.centroids.sd <- acast(pcoa.L.centroids, variable ~ group, sd)
pcoa.cent.dataframe <- cbind(t(pcoa.centroids), t(pcoa.centroids.se))
colnames(pcoa.cent.dataframe) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats <- rownames(pcoa.cent.dataframe)
pcoa.col <- as.factor(sapply(strsplit(pcoa.cent.treats, "_"), `[`, 2)) # Salinity
pcoa.shape <- as.factor(sapply(strsplit(pcoa.cent.treats, "_"), `[`, 1))  # Date
df1a <- as.data.frame(pcoa.cent.dataframe)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=pcoa.col, shape = pcoa.shape,
group = interaction(pcoa.col, pcoa.shape))) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(labels = c("0","5","9","13"),
values = c("#FFFFFF", "#00FFFF", "#33CCCC", "#0066CC")) +
scale_fill_manual(labels = c("0","5","9","13"),
values = c("#FFFFFF", "#00FFFF", "#33CCCC", "#0066CC")) +
scale_shape_manual(labels = c("0","18","45"),
values = c(22, 21, 24)) +
coord_cartesian(xlim = c(-0.25, 0.5), ylim = c(-0.35, 0.3)) +
theme(axis.title = element_text(size=18), axis.text=element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (21.7%)") + ylab("PCoA 2 (6.6%)") +
labs(fill = "Salinity", shape = "Date") +
guides(fill = guide_legend(override.aes = list(pch=21, size = 4, colour="black")),
shape = guide_legend(override.aes = list(size = 4, fill="black")))
View(design.full)
sampleREL.dist1 <- vegdist(otu_final.ns, method="bray")
CSI_pcoa1 <- cmdscale(sampleREL.dist1, k=3, eig=TRUE, add=FALSE)
explainvar1a <- round(CSI_pcoa1$eig[1] / sum(CSI_pcoa1$eig), 3) * 100
explainvar2a <- round(CSI_pcoa1$eig[2] / sum(CSI_pcoa1$eig), 3) * 100
sum.eiga <- sum(explainvar1a, explainvar2a)
explainvar1a #20.8
explainvar2a #6.4
csi_pres_abs <- (otu_final.ns > 0) * 1
csi_pres_abs.ns <- (otu_final.ns > 0) * 1
csi_relabun.ns <- otu_final.ns
for (i in 1:dim(otu_final.ns)[1]) {
csi_relabun.ns[i, ] <- otu_final.ns[i, ]/sum(otu_final.ns[i,
])
}
csi.full.ns <- cbind(design_final,csi_relabun,ns)
csi.full.ns <- cbind(design_final,csi_relabun.ns)
csi.full.ns <- cbind(design.ns.final,csi_relabun.ns)
all.equal(rownames(design.ns.final), rownames(csi_relabun.ns))
pcoa.groups <- paste(design.ns.final$Date, design.ns.final$Salinity, sep = "_")
pcoa.points <- data.frame(CSI_pcoa1$points, group = pcoa.groups)
pcoa.L.centroids <- melt(pcoa.points, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids <- acast(pcoa.L.centroids, variable ~ group, mean)
pcoa.centroids.se <- acast(pcoa.L.centroids, variable ~ group, se)
pcoa.centroids.sd <- acast(pcoa.L.centroids, variable ~ group, sd)
pcoa.cent.dataframe <- cbind(t(pcoa.centroids), t(pcoa.centroids.se))
colnames(pcoa.cent.dataframe) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats <- rownames(pcoa.cent.dataframe)
pcoa.col <- as.factor(sapply(strsplit(pcoa.cent.treats, "_"), `[`, 2)) # Salinity
pcoa.shape <- as.factor(sapply(strsplit(pcoa.cent.treats, "_"), `[`, 1))  # Date
df1a <- as.data.frame(pcoa.cent.dataframe)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=pcoa.col, shape = pcoa.shape,
group = interaction(pcoa.col, pcoa.shape))) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(labels = c("0","5","9","13"),
values = c("#FFFFFF", "#00FFFF", "#33CCCC", "#0066CC")) +
scale_fill_manual(labels = c("0","5","9","13"),
values = c("#FFFFFF", "#00FFFF", "#33CCCC", "#0066CC")) +
scale_shape_manual(labels = c("0","18","45"),
values = c(22, 21, 24)) +
coord_cartesian(xlim = c(-0.25, 0.5), ylim = c(-0.35, 0.3)) +
theme(axis.title = element_text(size=18), axis.text=element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (21.7%)") + ylab("PCoA 2 (6.6%)") +
labs(fill = "Salinity", shape = "Date") +
guides(fill = guide_legend(override.aes = list(pch=21, size = 4, colour="black")),
shape = guide_legend(override.aes = list(size = 4, fill="black")))
ggsave("../figures/16SrRNA_CSI_Rplot_SalinityDispersal_NoSource.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=900, limitsize=TRUE)
library("labdsv")
csi_tax <- read.tax(taxonomy = "../data/CSI.0.03.cons.taxonomy", format = "rdp", tax.levels = 6, col.tax = 3)
csi_relabun.ns.2 <- csi_relabun.ns[, colSums(csi_relabun.ns) > 0.05]
csi_relabun.ns.2 <- csi_relabun.ns[, colSums(csi_relabun.ns) > 0.05]
bac.ind <- indval(csi_relabun.ns, treatments1)
levels(treatments1)
sampleREL.dist1 <- vegdist(csi_relabun.ns, method="bray")
adonis = adonis(csi.full.ns[,-c(1:7)] ~ Date*Dispersal*Salinity, method = "bray", data = csi.full.ns, perm=1000)
str(csi.full.ns)
adonis = adonis(csi.full.ns[,-c(1:15)] ~ Date2*Dispersal*Salinity, method = "bray", data = csi.full.ns, perm=1000)
adonis
CSI_pcoa1 <- cmdscale(sampleREL.dist1, k=3, eig=TRUE, add=FALSE)
explainvar1a <- round(CSI_pcoa1$eig[1] / sum(CSI_pcoa1$eig), 3) * 100
explainvar2a <- round(CSI_pcoa1$eig[2] / sum(CSI_pcoa1$eig), 3) * 100
sum.eiga <- sum(explainvar1a, explainvar2a)
explainvar1a #16.2
explainvar2a #6.9
all.equal(rownames(design.ns.final), rownames(csi_relabun.ns))
pcoa.groups <- paste(design.ns.final$Date, design.ns.final$Salinity, sep = "_")
pcoa.points <- data.frame(CSI_pcoa1$points, group = pcoa.groups)
pcoa.L.centroids <- melt(pcoa.points, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids <- acast(pcoa.L.centroids, variable ~ group, mean)
pcoa.centroids.se <- acast(pcoa.L.centroids, variable ~ group, se)
pcoa.centroids.sd <- acast(pcoa.L.centroids, variable ~ group, sd)
pcoa.cent.dataframe <- cbind(t(pcoa.centroids), t(pcoa.centroids.se))
colnames(pcoa.cent.dataframe) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats <- rownames(pcoa.cent.dataframe)
pcoa.col <- as.factor(sapply(strsplit(pcoa.cent.treats, "_"), `[`, 2)) # Salinity
pcoa.shape <- as.factor(sapply(strsplit(pcoa.cent.treats, "_"), `[`, 1))  # Date
df1a <- as.data.frame(pcoa.cent.dataframe)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=pcoa.col, shape = pcoa.shape,
group = interaction(pcoa.col, pcoa.shape))) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(labels = c("0","5","9","13"),
values = c("#FFFFFF", "#00FFFF", "#33CCCC", "#0066CC")) +
scale_fill_manual(labels = c("0","5","9","13"),
values = c("#FFFFFF", "#00FFFF", "#33CCCC", "#0066CC")) +
scale_shape_manual(labels = c("0","18","45"),
values = c(22, 21, 24)) +
coord_cartesian(xlim = c(-0.25, 0.5), ylim = c(-0.35, 0.3)) +
theme(axis.title = element_text(size=18), axis.text=element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (17.2%)") + ylab("PCoA 2 (7.4%)") +
labs(fill = "Salinity", shape = "Date") +
guides(fill = guide_legend(override.aes = list(pch=21, size = 4, colour="black")),
shape = guide_legend(override.aes = list(size = 4, fill="black")))
ggsave("../figures/16SrRNA_CSI_Rplot_SalinityDispersal_NoSource.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=900, limitsize=TRUE)
csi_relabun.ns.2 <- csi_relabun.ns[, colSums(csi_relabun.ns) > 0.05]
bac.ind <- indval(csi_relabun.ns, treatments1)
csi_relabun.ns.2 <- csi_relabun.ns[, colSums(csi_relabun.ns) > 0.05]
bac.ind <- indval(csi_relabun.ns, Salinity)
treatments1
csi_relabun.ns.2 <- csi_relabun.ns[, colSums(csi_relabun.ns) > 0.05]
bac.ind <- indval(csi_relabun.ns.2, treatments1)
levels(treatments1)
summary(bac.ind)
inds <- which(bac.ind$pval <= 0.05)
bac.indicators <- as.data.frame(matrix(NA, nrow = length(inds), ncol = 4))
colnames(bac.indicators) <- c("OTU", "Cluster", "IndVal", "Prob")
bac.indicators$OTU <- names(inds)
bac.indicators$Cluster <- bac.ind$maxcls[inds]
bac.indicators$IndVal <- bac.ind$indcls[inds]
bac.indicators$Prob <- bac.ind$pval[inds]
csi.tax <- read.tax(taxonomy = "../data/CSI.0.03.cons.taxonomy", format = "rdp", tax.levels = 6, col.tax = 3)
csi_relabun.ns.2 <- csi_relabun.ns[, colSums(csi_relabun.ns) > 0.05]
bac.ind <- indval(csi_relabun.ns.2, treatments1)
bac.ind <- indval(csi_relabun.ns.2, treatments1)
levels(treatments1)
summary(bac.ind)
inds <- which(bac.ind$pval <= 0.05)
bac.indicators <- as.data.frame(matrix(NA, nrow = length(inds), ncol = 4))
colnames(bac.indicators) <- c("OTU", "Cluster", "IndVal", "Prob")
bac.indicators$OTU <- names(inds)
bac.indicators$Cluster <- bac.ind$maxcls[inds]
bac.indicators$IndVal <- bac.ind$indcls[inds]
bac.indicators$Prob <- bac.ind$pval[inds]
ind.tax <- csi.tax[which(as.character(csi.tax$OTU) %in% bac.indicators$OTU), ]
ind.tax <- ind.tax[match(ind.tax$OTU, bac.indicators$OTU), ]
indicator.bac <- cbind(bac.indicators, ind.tax[, -c(1)])
indicator.bac <- indicator.bac[order(as.numeric(indicator.bac$Cluster)), ]
table(indicator.bac$Cluster)
table(indicator.bac$Phylum)
table(indicator.bac$Cluster)
levels(treatments1)
write.table(indicator.bac, "../data/BacterialIndicators.txt",
sep="\t", row.names = F, quote = F)
split(indicator.bac$Phylum, indicator.bac$Cluster)
split(indicator.bac$Class, indicator.bac$Cluster)
plot(as.factor(indicator.bac$Cluster), as.factor(indicator.bac$Phylum))
