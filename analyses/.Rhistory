temp <- rownames(design_final[which(design_final$Number %in% c(1,2,3)), ])
otu_final.ns <- otu_final[-(which(rownames(otu_final) %in% temp)), ]
dim(otu_final.ns)
dim(design.ns)
#drop missing data
missing <- setdiff(rownames(design.ns), rownames(otu_final.ns))
design.ns2 <- design.ns[-(which(rownames(design.ns) == missing)), ]
dim(design.ns2)
# Drop levels of factors that are no longer in data set
design.ns.final <- droplevels(design.ns2)
all.equal(rownames(design.ns2), rownames(otu_final.ns))
# create presence/absence and relative abundance matrices
csi_pres_abs.ns <- (otu_final.ns > 0) * 1
csi_relabun.ns <- otu_final.ns
for (i in 1:dim(otu_final.ns)[1]) {
csi_relabun.ns[i, ] <- otu_final.ns[i, ]/sum(otu_final.ns[i,
])
}
# bind design and bact files NO Source
csi.full.ns <- cbind(design.ns.final,csi_relabun.ns)
csi.ns <- cbind(design.ns.final,otu_final.ns)
# bind design and bact files WITH SOURCE
csi.relabun.full <- cbind(design_final,csi_relabun)
dim(csi.relabun.full)
csi.PA.full <- cbind(design_final,csi_pres_abs)
dim(csi.PA.full)
# Set treatments
treatments1 <- as.factor(design.ns.final$Salinity)
levels(treatments1) <- c("0","5","9","13")
treatments2 <- as.factor(design.ns.final$Dispersal)
levels(treatments2) <- c("2","3")
#date_1 <- as.factor(desighn.ns.final$Date2)
#matrix comparison - Is there a relationship between zooplankton and bacterial community? = YES Mantel r = 0.409, P<0.0001
dim(otu_final.ns)
zoop.ns <- read.csv("../data/zoop_CSI_NoSource.csv", row.names=1)
str(zoop.ns)
dim(zoop.ns)
#odd sites for bacteria CSI033 is ShortID ECU_CSI_034
#odd sites for bacteria CSI101 is Short ID	ECU_CSI_103
#deleted IUbarcode CSI041 = CSI 42 - double check
#CSI 27 has zero individuals after source tanks removed
odd.sites <- c("27","42","103")
zoop.ns2 <- zoop.ns[setdiff(rownames(zoop.ns), odd.sites), ]
dim(zoop.ns2)
# Make Relative Abundance Matrices
zoop.ns3 <- zoop.ns2[,-c(1:4)]
zoopREL <- zoop.ns3
for(i in 1:dim(zoop.ns3)[1]){
zoopREL[i,] <- zoop.ns3[i,]/sum(zoop.ns3[i,])
}
# use csi_relabun.ns but drop CSI 27 sample/ IUbarcode ID CSI026	is CSI-027
csi_relabun.ns
odd.sites <- c("CSI026")
dim(csi_relabun.ns)
csi_relabun.ns2 <- csi_relabun.ns[setdiff(rownames(csi_relabun.ns), odd.sites), ]
dim(csi_relabun.ns2)
dim(zoop.ns3)
dist.zoop <- vegdist(zoopREL, method = "bray")
dist.bact <- vegdist(csi_relabun.ns2, method = "bray")
require(ade4)
mantel.rtest(dist.zoop, dist.bact, nrepet = 999)
# Rarefy Abundances (min abundance is 13,240. We are sampling to 13,000)
min(rowSums(otu_final.ns))
otu.rarefy <- rrarefy(otu_final.ns, 13000)
# Calculate Shannon H' (called shannon) using full data set (WITH source tanks)
shannon <- diversity(otu.rarefy, "shannon")
# Species Richness
richness <- rowSums((otu.rarefy >= 1))
# Pielou’s evenness
J <- shannon/log(specnumber(otu.rarefy[,-c(1:1)]))
# Dombined design,shannon,richness,evenness - no source tanks
csi_otu.div <- cbind(design.ns.final,shannon,richness,J)
# Rarefy Abundances with SOURCES (min abundance is 13,240. We are sampling to 13,000)
min(rowSums(otu_final))
otu.rarefy <- rrarefy(otu_final, 13000)
# Calculate Shannon H' (called shannon) using full data set (WITH source tanks)
shannon.source <- diversity(otu.rarefy, "shannon")
# Species Richness
richness.source <- rowSums((otu.rarefy >= 1))
# Pielou’s evenness
J.source <- shannon.source/log(specnumber(otu.rarefy[,-c(1:1)]))
# Dombined design,shannon,richness,evenness - no source tanks
csi_otu.div.source <- cbind(design_final, shannon.source,
richness.source,J.source)
# run full parametric statistical model
shannon.lm <- lm(shannon ~ Dispersal*Salinity*Date, data = csi_otu.div)
plot(shannon.lm)
shannon.reg <- lm(shannon~Salinity_real, data = csi_otu.div)
summary(shannon.reg)
# run for source tanks only
csi.div.source1 <- subset(csi_otu.div.source, Number == "1")
csi.div.source2 <- subset(csi_otu.div.source, Number == "2")
csi.div.source1 #salt source
csi.div.source2 #fresh source
csi.div.source <- rbind(csi.div.source1,csi.div.source2)
dim(csi.div.source)
Number1 <- as.factor(csi.div.source$Number)
shannon.lm.source <- lm(shannon.source ~ Date2, data = csi.div.source)
plot(shannon.lm.source)
date_1 <- as.factor(design.ns.final$Date2)
labels <- c("0"="Day 0","18"="Day 18", "45"="Day 45")
# Graphing Shannon Diversity - Treatment Salinity NO SOURCE
p <- ggplot(csi_otu.div, aes(x=Salinity, y=shannon, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh+salt (2)", "salt only (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(~Date2)+facet_grid(. ~ Date2, labeller=labeller(Date2 = labels))
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Salinity", y = "Shannon Diversity Index (H')") + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/ms/shannon.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
# Graphing Shannon Diversity - Treatment Salinity SOURCE ONLY
p <- ggplot(csi.div.source, aes(x=Date2, y=shannon.source, color=as.factor(Number1)))+ scale_color_manual(name="Dispersal Source", values=c("darkgray","blue"), labels = c("saltwater", "freshwater")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Day of Experiment", y = "Shannon Diversity Index (H')") + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/ms/shannon.source.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
# run full parametric statistical model
J.lm <- lm(J ~ Dispersal*Salinity*Date, data = csi_otu.div)
plot(J.lm)
summary(J.reg)
# run for source tanks only
J.lm.source <- lm(J.source ~ Number1, data = csi.div.source)
plot(J.lm.source)
p <- ggplot(csi_otu.div, aes(x=Salinity, y=J, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh+salt (2)", "salt only (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(~Date2)+facet_grid(. ~ Date2, labeller=labeller(Date2 = labels))
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Salinity", y = "Pielou's Evenness (J')") + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/ms/pielousj.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
# Graphing Pielous J - Treatment Salinity SOURCE ONLY
p <- ggplot(csi.div.source, aes(x=Date2, y=J.source, color=as.factor(Number1)))+ scale_color_manual(name="Dispersal Source", values=c("darkgray","blue"), labels = c("saltwater", "freshwater")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Day of Experiment", y = "Pielou's Evenness (J')") + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/ms/pielousj.source.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
# run full parametric statistical model
richness.lm <- lm(log(richness) ~ Dispersal*Salinity*Date, data = csi_otu.div)
plot(richness.lm)
richness.reg <- lm(richness~Salinity_real, data = csi_otu.div)
summary(richness.reg)
# run for source tanks only
richness.lm.source <- lm(richness.source ~ Number1, data = csi.div.source)
plot(richness.lm.source)
# Graphing richness - Treatment Salinity
p <- ggplot(csi_otu.div, aes(x=Salinity, y=richness, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh+salt (2)", "salt only (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(~Date2)+facet_grid(. ~ Date2, labeller=labeller(Date2 = labels))
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Salinity", y = "Species Richness") + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/ms/richness.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
# Graphing richness - Treatment Salinity SOURCE ONLY
p <- ggplot(csi.div.source, aes(x=Date2, y=richness.source, color=as.factor(Number1)))+ scale_color_manual(name="Dispersal Source", values=c("darkgray","blue"), labels = c("saltwater", "freshwater")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Day of Experiment", y = "Species Richness") + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/ms/richness.source.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
#Cmin data inculded in full data set - no longer need to import separate file. Note: only use Date2=45 since Cmin only completed Day 45 of experiment
# run full parametric statistical model SOURCE
Cmin.lm <- lm(Cmin ~ Dispersal*Salinity, data = design.env.full)
plot(Cmin.lm)
csi.full.ns.Cmin  <- csi.full.ns[which(csi.full.ns$Date2=="45"),]
dim(csi.full.ns)
dim(csi.full.ns.Cmin)
plot(richness.lm)
Cmin.lm <- lm(Cmin ~ Dispersal*Salinity, data = csi.full.ns.Cmin)
Cmin.lm
anova(Cmin.lm)
# run linear regression measured salinity used instead of 'factor' salinity
Cmin.reg <- lm(Cmin~Salinity_real, data = csi.full.ns.Cmin)
summary(Cmin.reg)
#import C-mineralization CSV -- no source tanks
carbon_min <- read.csv("../data/Cmin-data-NO-SOURCE.csv")
p <- ggplot(csi.full.ns.Cmin, aes(x=Salinity, y=Cmin, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh+salt (2)", "salt only (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Salinity", y = (expression(paste("C Mineralization (ng CO"[2]," mL"^-{1}," day"^-{1},")")))) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/ms/carbon_mineralization.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
p <- ggplot(csi.full.ns.Cmin, aes(x=Salinity_real, y=Cmin, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh+salt (2)", "salt only (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Salinity", y = (expression(paste("C Mineralization (ng CO"[2]," mL"^-{1}," day"^-{1},")")))) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/ms/real.sal.carbonmin.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
require("stats")
require("labdsv")
require("mgcv")
require("cluster")
require("vegan")
require("reshape2")
require("reshape")
#csi.full <- cbind(design_final,csi_relabun) - ready for stats
#csi.full.ns <- cbind(design.ns.final,csi_relabun.ns) - ready for stats NO SOURCE TANKS
sampleREL.dist1 <- vegdist(csi_relabun.ns, method="bray")
# PERMANOVA
adonis = adonis(csi.full.ns[,-c(1:16)] ~ Date2*Dispersal*Salinity, method = "bray", data = csi.full.ns, perm=1000)
adonis
# Principal Coordinates Analysis - NO SOURCE
CSI_pcoa1 <- cmdscale(sampleREL.dist1, k=3, eig=TRUE, add=FALSE)
# Classical (Metric) Multidimensional Scaling; returns PCoA coordinates
# eig=TRUE returns eigenvalues; k = # of dimensions to calculate
explainvar1a <- round(CSI_pcoa1$eig[1] / sum(CSI_pcoa1$eig), 3) * 100
explainvar2a <- round(CSI_pcoa1$eig[2] / sum(CSI_pcoa1$eig), 3) * 100
sum.eiga <- sum(explainvar1a, explainvar2a)
explainvar1a #17.2
explainvar2a #7.4
all.equal(rownames(design.ns.final), rownames(csi_relabun.ns))
pcoa.groups <- paste(design.ns.final$Date, design.ns.final$Salinity, sep = "_")
pcoa.points <- data.frame(CSI_pcoa1$points, group = pcoa.groups)
# Calculate Centroids (mean and SE)
pcoa.L.centroids <- melt(pcoa.points, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids <- acast(pcoa.L.centroids, variable ~ group, mean)
pcoa.centroids.se <- acast(pcoa.L.centroids, variable ~ group, se)
pcoa.centroids.sd <- acast(pcoa.L.centroids, variable ~ group, sd)
# Combine
pcoa.cent.dataframe <- cbind(t(pcoa.centroids), t(pcoa.centroids.se))
colnames(pcoa.cent.dataframe) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats <- rownames(pcoa.cent.dataframe)
pcoa.col <- as.factor(sapply(strsplit(pcoa.cent.treats, "_"), `[`, 2)) # Salinity
pcoa.shape <- as.factor(sapply(strsplit(pcoa.cent.treats, "_"), `[`, 1))  # Date
df1a <- as.data.frame(pcoa.cent.dataframe)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=pcoa.col, shape = pcoa.shape,
group = interaction(pcoa.col, pcoa.shape))) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(values = c("#FFFFFF", "#00FFFF", "#33CCCC", "#0066CC")) +
#scale_fill_manual(labels = c("0","5","9","13"),
#values = c("#FFFFFF", "#00FFFF", "#33CCCC", "#0066CC")) +
scale_shape_manual(labels = c("0","18","45"),
values = c(22, 21, 24)) +
coord_cartesian(xlim = c(-0.25, 0.5), ylim = c(-0.35, 0.3)) +
theme(axis.title = element_text(size=18), axis.text=element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (17.2%)") + ylab("PCoA 2 (7.4%)") +
labs(fill = "Salinity", shape = "Date") +
guides(fill = guide_legend(override.aes = list(pch=21, size = 4, colour="black")),
shape = guide_legend(override.aes = list(size = 4, fill="black")))
ggsave("../figures/ms/16SrRNA_CSI_Rplot_SalinityDispersal_NoSource.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=900, limitsize=TRUE)
# run for source tanks only
csi.div.source1 <- subset(csi.relabun.full, Number == "1")
csi.div.source2 <- subset(csi.relabun.full, Number == "2")
csi.div.source1 #salt source
csi.div.source2 #fresh source
csi.relabun.full2 <- rbind(csi.div.source1,csi.div.source2)
sampleREL.dist2 <- vegdist(csi.relabun.full2[,-c(1:8)], method="bray")
# PERMANOVA
adonis2 <- adonis(csi.relabun.full2[,-c(1:8)] ~ Date*Dispersal*Salinity, method = "bray", data = csi.relabun.full2, perm=1000)
adonis2
# Principal Coordinates Analysis - WITH SOURCE
CSI_pcoa2 <- cmdscale(sampleREL.dist2, k=3, eig=TRUE, add=FALSE)
# Classical (Metric) Multidimensional Scaling; returns PCoA coordinates
# eig=TRUE returns eigenvalues; k = # of dimensions to calculate
explainvar1b <- round(CSI_pcoa2$eig[1] / sum(CSI_pcoa2$eig), 3) * 100
explainvar2b <- round(CSI_pcoa2$eig[2] / sum(CSI_pcoa2$eig), 3) * 100
sum.eigb <- sum(explainvar1b, explainvar2b)
explainvar1b #29.1
explainvar2b #9.8
#all.equal(rownames(csi.relabun.full2), rownames(csi_relabun))
pcoa.groups2 <- paste(csi.relabun.full2$Date, csi.relabun.full2$Number, sep = "_")
pcoa.points2 <- data.frame(CSI_pcoa2$points, group = pcoa.groups2)
# Calculate Centroids (mean and SE)
pcoa.L.centroids2 <- melt(pcoa.points2, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids2 <- acast(pcoa.L.centroids2, variable ~ group, mean)
pcoa.centroids.se2 <- acast(pcoa.L.centroids2, variable ~ group, se)
pcoa.centroids.sd2 <- acast(pcoa.L.centroids2, variable ~ group, sd)
# Combine
pcoa.cent.dataframe2 <- cbind(t(pcoa.centroids2), t(pcoa.centroids.se2))
colnames(pcoa.cent.dataframe2) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats2 <- rownames(pcoa.cent.dataframe2)
pcoa.col2 <- as.factor(sapply(strsplit(pcoa.cent.treats2, "_"), `[`, 2)) # Tank Number
pcoa.shape2 <- as.factor(sapply(strsplit(pcoa.cent.treats2, "_"), `[`, 1))  # Date
df1a2 <- as.data.frame(pcoa.cent.dataframe2)
plot1a2 <- ggplot(df1a2, aes(x=V1, y=V2, colour=pcoa.col2, shape = pcoa.shape2,
group = interaction(pcoa.col2, pcoa.shape2))) + theme_bw()
plot1a2 + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col2), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(labels = c("saltwater","freshwater"),
values = c("#FFFFFF", "#0066CC")) +
scale_fill_manual(labels = c("saltwater","freshwater"),
values = c("#FFFFFF", "#0066CC")) +
scale_shape_manual(labels = c("0","18","45"),
values = c(22, 21, 24)) +
theme(axis.title = element_text(size=18), axis.text=element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (29.1%)") + ylab("PCoA 2 (9.8%)") +
labs(fill = "Dispersal Source", shape = "Day of Experiment") +
guides(fill = guide_legend(override.aes = list(pch=21, size = 4, colour="black")),
shape = guide_legend(override.aes = list(size = 4, fill="black")))
ggsave("../figures/ms/16SrRNA_CSI_Rplot_Source.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=900, limitsize=TRUE)
# run for source tanks only
#use csi.relabun.full dataframe
sampleREL.dist3 <- vegdist(csi.relabun.full[,-c(1:8)], method="bray")
# PERMANOVA
adonis3 <- adonis(csi.relabun.full[,-c(1:8)] ~ Date*Dispersal, method = "bray", data = csi.relabun.full, perm=1000)
adonis3
# Principal Coordinates Analysis - WITH SOURCE
CSI_pcoa3 <- cmdscale(sampleREL.dist3, k=3, eig=TRUE, add=FALSE)
# Classical (Metric) Multidimensional Scaling; returns PCoA coordinates
# eig=TRUE returns eigenvalues; k = # of dimensions to calculate
explainvar1b <- round(CSI_pcoa3$eig[1] / sum(CSI_pcoa3$eig), 3) * 100
explainvar2b <- round(CSI_pcoa3$eig[2] / sum(CSI_pcoa3$eig), 3) * 100
sum.eigb <- sum(explainvar1b, explainvar2b)
explainvar1b #20.8
explainvar2b #6.4
pcoa.groups3 <- paste(csi.relabun.full$Date, csi.relabun.full$Dispersal, sep = "_")
pcoa.points3 <- data.frame(CSI_pcoa3$points, group = pcoa.groups3)
# Calculate Centroids (mean and SE)
pcoa.L.centroids3 <- melt(pcoa.points3, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids3 <- acast(pcoa.L.centroids3, variable ~ group, mean)
pcoa.centroids.se3 <- acast(pcoa.L.centroids3, variable ~ group, se)
pcoa.centroids.sd3 <- acast(pcoa.L.centroids3, variable ~ group, sd)
# Combine
pcoa.cent.dataframe3 <- cbind(t(pcoa.centroids3), t(pcoa.centroids.se3))
colnames(pcoa.cent.dataframe3) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats3 <- rownames(pcoa.cent.dataframe3)
pcoa.col3 <- as.factor(sapply(strsplit(pcoa.cent.treats3, "_"), `[`, 2)) # Dispersal
pcoa.shape3 <- as.factor(sapply(strsplit(pcoa.cent.treats3, "_"), `[`, 1))  # Date
##order of dispersal is TRT 2, TRT 3, Control00, Source0, Source13
df3a <- as.data.frame(pcoa.cent.dataframe3)
plot1a <- ggplot(df3a, aes(x=V1, y=V2, colour=pcoa.col3, shape = pcoa.shape3,
group = interaction(pcoa.col3, pcoa.shape3))) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col3), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(labels = c("0","5","9","13", "extra"),
values = c("#FFFFFF", "#CCFF00", "#00CC00", "#336600", "darkgray")) +
scale_fill_manual(labels = c("TRT fresh+salt (2)","TRT salt only (3)","Control (no dispersal)","Source fresh","Source salt"),
#values = c("#FFFFFF", "#CCFF00", "#00CC00", "#336600", "darkgray")) +
scale_shape_manual(labels = c("0","18","45"),
values = c(22, 21, 24)) +
theme(axis.title = element_text(size=18), axis.text=element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (20.8%)") + ylab("PCoA 2 (6.4%)") +
labs(fill = "Dispersal", shape = "Day of Experiment") +
guides(fill = guide_legend(override.aes = list(pch=21, size = 4, colour="black")),
shape = guide_legend(override.aes = list(size = 4, fill="black")))
ggsave("../figures/ms/16SrRNA_CSI_Rplot_SourceAndTrt.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=900, limitsize=TRUE)
df3a <- as.data.frame(pcoa.cent.dataframe3)
plot1a <- ggplot(df3a, aes(x=V1, y=V2, colour=pcoa.col3, shape = pcoa.shape3,
group = interaction(pcoa.col3, pcoa.shape3))) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(),
df3a <- as.data.frame(pcoa.cent.dataframe3)
plot1a <- ggplot(df3a, aes(x=V1, y=V2, colour=pcoa.col3, shape = pcoa.shape3,
group = interaction(pcoa.col3, pcoa.shape3))) + theme_bw()
df3a <- as.data.frame(pcoa.cent.dataframe3)
plot1a <- ggplot(df3a, aes(x=V1, y=V2, colour=pcoa.col3, shape = pcoa.shape3,
group = interaction(pcoa.col3, pcoa.shape3))) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(),
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col3), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(labels = c("0","5","9","13", "extra"),
values = c("#FFFFFF", "#CCFF00", "#00CC00", "#336600", "darkgray"))
df3a <- as.data.frame(pcoa.cent.dataframe3)
plot1a <- ggplot(df3a, aes(x=V1, y=V2, colour=pcoa.col3, shape = pcoa.shape3,
group = interaction(pcoa.col3, pcoa.shape3))) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col3), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(labels = c("0","5","9","13", "extra"),
values = c("#FFFFFF", "#CCFF00", "#00CC00", "#336600", "darkgray")) +
scale_fill_manual(labels = c("TRT fresh+salt (2)","TRT salt only (3)","Control (no dispersal)","Source fresh","Source salt"),
#values = c("#FFFFFF", "#CCFF00", "#00CC00", "#336600", "darkgray")) +
scale_shape_manual(labels = c("0","18","45"),
values = c(22, 21, 24)) +
theme(axis.title = element_text(size=18), axis.text=element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (20.8%)") + ylab("PCoA 2 (6.4%)") +
labs(fill = "Dispersal", shape = "Day of Experiment") +
guides(fill = guide_legend(override.aes = list(pch=21, size = 4, colour="black")),
shape = guide_legend(override.aes = list(size = 4, fill="black")))
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col3), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(labels = c("0","5","9","13", "extra"),
values = c("#FFFFFF", "#CCFF00", "#00CC00", "#336600", "darkgray")) +
scale_fill_manual(labels = c("TRT fresh+salt (2)","TRT salt only (3)","Control (no dispersal)","Source fresh","Source salt"),
#values = c("#FFFFFF", "#CCFF00", "#00CC00", "#336600", "darkgray")) +
scale_shape_manual(labels = c("0","18","45"),
values = c(22, 21, 24)) +
theme(axis.title = element_text(size=18), axis.text=element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (20.8%)") + ylab("PCoA 2 (6.4%)") +
labs(fill = "Dispersal", shape = "Day of Experiment")
# run for source tanks only
#use csi.relabun.full dataframe
sampleREL.dist4 <- vegdist(csi.relabun.full[,-c(1:8)], method="bray")
Date <- csi.relabun.full$Date2
# PERMANOVA
adonis4 <- adonis(csi.relabun.full[,-c(1:8)] ~ Date*Dispersal*Salinity, method = "bray", data = csi.relabun.full, perm=1000)
adonis4
# Principal Coordinates Analysis - WITH SOURCE
CSI_pcoa4 <- cmdscale(sampleREL.dist4, k=3, eig=TRUE, add=FALSE)
# Classical (Metric) Multidimensional Scaling; returns PCoA coordinates
# eig=TRUE returns eigenvalues; k = # of dimensions to calculate
explainvar1b <- round(CSI_pcoa4$eig[1] / sum(CSI_pcoa4$eig), 3) * 100
explainvar2b <- round(CSI_pcoa4$eig[2] / sum(CSI_pcoa4$eig), 3) * 100
sum.eigb <- sum(explainvar1b, explainvar2b)
explainvar1b #20.8
explainvar2b #6.4
pcoa.groups4 <- paste(csi.relabun.full$Dispersal, csi.relabun.full$Salinity, sep = "_")
Date <- csi.relabun.full$Date2
pcoa.points4 <- data.frame(CSI_pcoa4$points, group = pcoa.groups4, date = Date)
# Calculate Centroids (mean and SE)
pcoa.L.centroids4 <- melt(pcoa.points4, id=c("group", "date"), measure.vars = c("X1", "X2"))
pcoa.centroids4 <- acast(pcoa.L.centroids4, variable ~ group + date, mean)
pcoa.centroids.se4 <- acast(pcoa.L.centroids4, variable ~ group + date, se)
pcoa.centroids.sd4 <- acast(pcoa.L.centroids4, variable ~ group + date, sd)
# Combine
pcoa.cent.dataframe4 <- cbind(t(pcoa.centroids4), t(pcoa.centroids.se4))
colnames(pcoa.cent.dataframe4) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats4 <- rownames(pcoa.cent.dataframe4)
pcoa.col4 <- as.factor(sapply(strsplit(pcoa.cent.treats4, "_"), `[`, 2)) # Salinity
pcoa.shape4 <- as.factor(sapply(strsplit(pcoa.cent.treats4, "_"), `[`, 1))  # Dispersal
pcoa.date <- as.factor(sapply(strsplit(pcoa.cent.treats4, "_"), `[`, 3))
pcoa.groups3 <- paste(csi.relabun.full$Date, csi.relabun.full$Dispersal, sep = "_")
pcoa.points3 <- data.frame(CSI_pcoa3$points, group = pcoa.groups3)
# Calculate Centroids (mean and SE)
pcoa.L.centroids3 <- melt(pcoa.points3, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids3 <- acast(pcoa.L.centroids3, variable ~ group, mean)
pcoa.centroids.se3 <- acast(pcoa.L.centroids3, variable ~ group, se)
pcoa.centroids.sd3 <- acast(pcoa.L.centroids3, variable ~ group, sd)
# Combine
pcoa.cent.dataframe3 <- cbind(t(pcoa.centroids3), t(pcoa.centroids.se3))
colnames(pcoa.cent.dataframe3) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats3 <- rownames(pcoa.cent.dataframe3)
pcoa.col3 <- as.factor(sapply(strsplit(pcoa.cent.treats3, "_"), `[`, 2)) # Dispersal
pcoa.shape3 <- as.factor(sapply(strsplit(pcoa.cent.treats3, "_"), `[`, 1))  # Date
##order of dispersal is TRT 2, TRT 3, Control00, Source0, Source13
df3a <- as.data.frame(pcoa.cent.dataframe3)
plot1a <- ggplot(df3a, aes(x=V1, y=V2, colour=pcoa.col3, shape = pcoa.shape3,
group = interaction(pcoa.col3, pcoa.shape3))) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col3), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(labels = c("0","5","9","13", "extra"),
values = c("#FFFFFF", "#CCFF00", "#00CC00", "#336600", "darkgray")) +
scale_fill_manual(labels = c("TRT fresh+salt (2)","TRT salt only (3)","Control (no dispersal)","Source fresh","Source salt"))  +
scale_shape_manual(labels = c("0","18","45"),
values = c(22, 21, 24)) +
theme(axis.title = element_text(size=18), axis.text=element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (20.8%)") + ylab("PCoA 2 (6.4%)") +
labs(fill = "Dispersal", shape = "Day of Experiment") +
guides(fill = guide_legend(override.aes = list(pch=21, size = 4, colour="black")),
shape = guide_legend(override.aes = list(size = 4, fill="black")))
ggsave("../figures/ms/16SrRNA_CSI_Rplot_SourceAndTrt.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=900, limitsize=TRUE)
df3a <- as.data.frame(pcoa.cent.dataframe3)
plot1a <- ggplot(df3a, aes(x=V1, y=V2, colour=pcoa.col3, shape = pcoa.shape3,
group = interaction(pcoa.col3, pcoa.shape3))) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col3), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(labels = c("0","5","9","13", "extra"),
values = c("#FFFFFF", "#CCFF00", "#00CC00", "#336600", "darkgray"))
df3a <- as.data.frame(pcoa.cent.dataframe3)
plot1a <- ggplot(df3a, aes(x=V1, y=V2, colour=pcoa.col3, shape = pcoa.shape3,
group = interaction(pcoa.col3, pcoa.shape3))) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col3), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(labels = c("0","5","9","13", "extra"),
values = c("#FFFFFF", "#CCFF00", "#00CC00", "#336600", "darkgray")) +
scale_fill_manual(labels = c("TRT fresh+salt (2)","TRT salt only (3)","Control (no dispersal)","Source fresh","Source salt"))  +
scale_shape_manual(labels = c("0","18","45"),
values = c(22, 21, 24))
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col3), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(labels = c("0","5","9","13", "extra"),
values = c("#FFFFFF", "#CCFF00", "#00CC00", "#336600", "darkgray")) +
scale_fill_manual(labels = c("TRT fresh+salt (2)","TRT salt only (3)","Control (no dispersal)","Source fresh","Source salt"))  +
scale_shape_manual(labels = c("0","18","45"), values = c(22, 21, 24))
