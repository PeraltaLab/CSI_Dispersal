plot1a + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("0","5","9","13"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00")) +
geom_point(size = 5,colour = "black") + scale_shape_manual(labels = c("2","3"), values = c(1,5)) +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (21.7%)") + ylab("PCoA 2 (6.6%)") +
labs(color = "Salinity") +
guides(colour = guide_legend(override.aes = list(pch=21, size = 4, colour="black",
fill=c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00"))))
ggsave("16SrRNA_CSI_Rplot_SalinityDisp.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
df1a <- as.data.frame(cent.dataframe1a)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=cent.treats1a)) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("0","5","9","13"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00")) +
geom_point(size = 5,colour = "black") + scale_shape_manual(labels = c("2","3"), values = c(1,5)) +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (21.7%)") + ylab("PCoA 2 (6.6%)")
ggsave("16SrRNA_CSI_Rplot_SalinityDisp.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
str(newCSIdata)
adonis = adonis(newCSIdata[,-c(1:15)] ~ Date2*Dispersal*Salinity, method = "bray", data = newCSIdata, perm=1000)
adonis
zoop <- read.csv("../data/zoop_CSI.csv", row.names=1)
str(zoop)
zoop <- read.csv("../data/zoop_CSI.csv", row.names=1)
str(zoop)
zoopREL <- zoop
for(i in 1:dim(zoop)[1]){
zoopREL[i,] <- zoop[i,]/sum(zoop[i,])
}
zoop <- read.csv("../data/zoop_CSI.csv", row.names=1)
str(zoop)
zoopREL <- zoop
for(i in 1:dim(zoop)[1]){
zoopREL[i,] <- zoop[i,]/sum(zoop[i,])
}
aa <- (rowSums(zoopREL))
aa <- (rowSums(zoop))
zoop <- read.csv("../data/zoop_CSI.csv", row.names=1)
str(zoop)
aa <- (rowSums(zoop))
str(zoop)
aa <- (colSums(zoop))
zoop.in <- subset(zoop([,-c(1:6)])
zoop.in <- zoop[,-c(1:6)]
dim(zoop.in)
zoop.in2 <- zoop.in[which(rowSums(zoop.in) >= 10), ]
dim(zoop.in2)
zoopREL <- zoop.in2
for(i in 1:dim(zoop.in2)[1]){
zoopREL[i,] <- zoop.in2[i,]/sum(zoop.in2[i,])
}
dist.zoop <- vegdist(zoopREL, method = "bray")
dist.bact <- vegdist(CSIdataREL, method = "bray")
mantel.rtest(dist.zoop, dist.bact, nrepet = 999)
CSIdataREL <- CSIdata.in3
for(i in 1:dim(CSIdata.in3)[1]){
CSIdataREL[i,] <- CSIdata.in3[i,]/sum(CSIdata.in3[i,])
}
dist.zoop <- vegdist(zoopREL, method = "bray")
dist.bact <- vegdist(CSIdataREL, method = "bray")
dim(dist.zoop)
str(dist.zoop)
dim(zoopREL)
dim(CSIdataREL)
zoop <- read.csv("../data/zoop_CSI.csv", row.names=1)
str(zoop)
dim(zoop)
dim(newCSIdata)
zoop.in <- zoop[,-c(1:6)]
dim(zoop.in)
zoop.in2 <- zoop.in[which(colSums(zoop.in) >= 10), ]
dim(zoop.in2)
zoop <- read.csv("../data/zoop_CSI.csv", row.names=1)
str(zoop)
dim(zoop)
zoop.in <- zoop[,-c(1:6)]
zoop.in2 <- zoop.in[which(rowSums(zoop.in) >= 10), ]
dim(zoop.in2)
zoop <- read.csv("../data/zoop_CSI.csv", row.names=1)
str(zoop)
dim(zoop)
zoop.in <- zoop[,-c(1:6)]
dim(zoop.in)
str(zoop.in)
aa <- (rowSums(zoop.in))
aa
odd.sites <- c("CSI026")
zoop.in2 <- zoop.in[setdiff(rownames(zoop.in), odd.sites), ]
CSIdataREL2 <- CSIdataREL[setdiff(rownames(CSIdataREL), odd.sites), ]
dim(zoop.in2)
dim(CSIdataREL2)
zoopREL <- zoop.in2
for(i in 1:dim(zoop.in2)[1]){
zoopREL[i,] <- zoop.in2[i,]/sum(zoop.in2[i,])
}
CSIdata.in4 <- CSIdata.in3[setdiff(rownames(CSIdata.in3), odd.sites), ]
dim(CSIdata.in4)
zoopREL <- zoop.in2
for(i in 1:dim(zoop.in2)[1]){
zoopREL[i,] <- zoop.in2[i,]/sum(zoop.in2[i,])
}
CSIdataREL2 <- CSIdata.in4
for(i in 1:dim(CSIdata.in4)[1]){
CSIdataREL2[i,] <- CSIdata.in4[i,]/sum(CSIdata.in4[i,])
}
dist.zoop <- vegdist(zoopREL, method = "bray")
dist.bact <- vegdist(CSIdataREL, method = "bray")
mantel.rtest(dist.zoop, dist.bact, nrepet = 999)
dist.zoop <- vegdist(zoopREL, method = "bray")
dist.bact <- vegdist(CSIdataREL2, method = "bray")
mantel.rtest(dist.zoop, dist.bact, nrepet = 999)
rm(list = ls())
setwd("~/GitHub/CSI_Dispersal/analyses")
source("../bin/DiversityFunctions.R")
source("../bin/MothurTools.R")
require("vegan")
require("dplyr")
require("nlme")
require("reshape2")
require("ecodist")
require("ggplot2")
require("ade4")
require("png")
require("MASS")
require("grid")
require("ape")
require("png")
require("picante")
se <- function(x, ...) {
sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))
}
ci <- function(x, ...) {
1.96 * sd(x, na.rm = TRUE)
}
design <- read.csv("../data/CSI_Design_ENV_NoSourceTanks.csv", row.names=1)
head(design)
str(design)
csi_otu <- read.otu("../data/CSI.shared")
dim(csi_otu)
missing <- setdiff(rownames(design_crobes), rownames(csi_otu))
design_crobes <- read.csv("../data/design_CSI.csv", row.names=1)
design_crobes <- design_crobes[-c(grep("mock community", design_crobes$CSI_ID)), ]
dim(design_crobes)
missing <- setdiff(rownames(design_crobes), rownames(csi_otu))
design_crobes <- design_crobes[-(which(rownames(design_crobes) == missing)), ]
dim(design_crobes)
design <- design[-(which(rownames(design) == missing)), ]
dim(design)
temp <- rownames(design_crobes[which(design_crobes$Number %in% c(1,2,3)), ])
bac.design <- design_crobes[-(which(rownames(design_crobes) %in% temp)), ]
design_crobes2 <- droplevels(bac.design)
dim(design_crobes2)
csi_otu_table <- csi_otu[-(which(rownames(csi_otu) %in% temp)), ]
dim(csi_otu_table)
csi_otu_table <- csi_otu[-(which(rownames(csi_otu) %in% temp)), ]
dim(csi_otu_table)
otu_removal <- csi_otu_table[, which(colSums(csi_otu_table) >= 2)]
dim(otu_removal)
rowSums(otu_removal)
otu_rarefy <- rrarefy(otu_removal, 13000)
csi_low_remov <- otu_removal[which(rowSums(otu_removal) >= 13000), ]
dim(csi_low_remov)
odd.sites <- c("CSI101")
otu_final <- csi_low_remov[setdiff(rownames(csi_low_remov), odd.sites), ]
design_final <- design[setdiff(rownames(design), odd.sites), ]
all.equal(rownames(design_final), rownames(otu_final))
csi_pres_abs <- (otu_final > 0) * 1
csi_relabun <- otu_final
for (i in 1:dim(otu_final)[1]) {
csi_relabun[i, ] <- otu_final[i, ]/sum(otu_final[i,
])
}
csi_tax <- read.tax(taxonomy = "../data/CSI.0.03.cons.taxonomy")
csi_tax <- read.tax(taxonomy = "../data/WL.final.0.03.taxonomy",
format = "rdp", tax.levels = 6, col.tax = 3)
csi_tax <- read.tax(taxonomy = "../data/CSI.final.0.03.taxonomy",
format = "rdp", tax.levels = 6, col.tax = 3)
csi_tax <- read.tax(taxonomy = "../data/CSI.0.03.cons.taxonomy",
format = "rdp", tax.levels = 6, col.tax = 3)
csi_tax <- read.tax(taxonomy = "../data/CSI.0.03.cons.taxonomy", format = "rdp", tax.levels = 6, col.tax = 3)
source("../bin/DiversityFunctions.R")
source("../bin/MothurTools.R")
csi_tax <- read.tax(taxonomy = "../data/CSI.0.03.cons.taxonomy", format = "rdp", tax.levels = 6, col.tax = 3)
rowSums(otu_final)
otu_rarefy <- rrarefy(otu_final, 13000)
new_csi <- cbind(design_final,csi_relabun)
df <- decostand(csi_relabun, method="hellinger")
dim(new_csi)
df_bact <- csi_dat[,-c(1:15)]
csi_dat <- na.omit(new_csi)
df_bact <- csi_dat[,-c(1:15)]
dim(df_bact)
View(new_csi)
df_nutr <- csi_dat[,c(9:11)]
dim(df_nutr)
csi_dat <- na.omit(new_csi)
dim(new_csi)
df_bact <- csi_dat[,-c(1:15)]
dim(df_bact)
df_nutr <- csi_dat[,c(9:11)]
dim(df_nutr)
treatments1 <- as.factor(design2$Salinity)
treatments1 <- as.factor(design_final$Salinity)
levels(treatments1) <- c("0","5","9","13")
treatments2 <- as.factor(design_final$Dispersal)
levels(treatments2) <- c("2","3")
date_1 <- as.factor(design2$Date2)
date_1 <- as.factor(design_final$Date2)
rm(list=ls())
setwd("~/GitHub/IL_Wetlands/analyses")
se <- function(x, ...){sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))}
ci <- function(x, ...){1.96 * sd(x,na.rm = TRUE)}
# Code Dependencies
source("../bin/DiversityFunctions.R")
source("../bin/MothurTools.R")
require("vegan")
require("reshape")
require("ggplot2")
require("nlme")
require("ade4")
require("grid"); require("png")
require("ape"); require("picante")
library("agricolae")
myColors <- c("#448844", "#33CC33", "#CCFF00", "#FFF000", "#FF9933", "#A9A9A9")
names(myColors) <- c("BalledBurlapped", "Bareroot", "Seedling",
"Acorn", "Seedbank", "Reference")
# Import Environmental Data
design <- read.csv("../data/WL.design.csv", row.names = 1)
design$Treatment <- factor(design$Treatment,
levels = c("BalledBurlapped", "Bareroot",
"Seedling", "Acorn", "Seedbank", "Reference"))
treatments <- design$Treatment
#levels(treatments) == c("BalledBurlapped", "Bareroot", "Seedling", "Acorn",
#                        "Seedbank", "Reference")
# Note: The sample names in the microbial part were incorrect (skipped 72)
#       They are correct in this design file and will be corrected for each below
WL.soil <- read.csv("../data/WL_plant_soil.csv")
row.names(WL.soil) <- WL.soil$Sample_Code
WL.soil$Treatment <- factor(WL.soil$Treatment,
levels = c("BalledBurlapped", "Bareroot",
"Seedling", "Acorn", "Seedbank", "Reference"))
WL.trts <- WL.soil[, "Treatment"]
WL.soil.phys <- WL.soil[, which(colnames(WL.soil) %in% c("Moisture",
"Temp", "pH"))]
WL.soil.nuts <- WL.soil[, which(colnames(WL.soil) %in% c("TOC", "TN",
"OM", "NH4.N", "NO3.N"))]
NO3.lm <- lm(NO3.N ~ Treatment, data=WL.soil)
anova(NO3.lm)
summary(NO3.lm)
HSD <- HSD.test(NO3.lm,"Treatment", console=TRUE)
TN.lm <- lm(TN ~ Treatment, data=WL.soil)
anova(TN.lm)
summary(TN.lm)
HSD <- HSD.test(TN.lm,"Treatment", console=TRUE)
rowSums(otu_final)
rm(list = ls())
setwd("~/GitHub/CSI_Dispersal/analyses")
source("../bin/DiversityFunctions.R")
source("../bin/MothurTools.R")
require("vegan")
require("dplyr")
require("nlme")
require("reshape2")
require("ecodist")
require("ggplot2")
require("ade4")
require("png")
require("MASS")
require("grid")
require("ape")
require("png")
require("picante")
se <- function(x, ...) {
sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))
}
ci <- function(x, ...) {
1.96 * sd(x, na.rm = TRUE)
}
design <- read.csv("../data/CSI_Design_ENV_NoSourceTanks.csv", row.names=1)
head(design)
str(design)
design_crobes <- read.csv("../data/design_CSI.csv", row.names=1)
design_crobes <- design_crobes[-c(grep("mock community", design_crobes$CSI_ID)), ]
dim(design_crobes)
csi_otu <- read.otu("../data/CSI.shared")
dim(csi_otu)
missing <- setdiff(rownames(design_crobes), rownames(csi_otu))
design_crobes <- design_crobes[-(which(rownames(design_crobes) == missing)), ]
dim(design_crobes)
design <- design[-(which(rownames(design) == missing)), ]
dim(design)
temp <- rownames(design_crobes[which(design_crobes$Number %in% c(1,2,3)), ])
bac.design <- design_crobes[-(which(rownames(design_crobes) %in% temp)), ]
design_crobes2 <- droplevels(bac.design)
dim(design_crobes2)
csi_otu_table <- csi_otu[-(which(rownames(csi_otu) %in% temp)), ]
dim(csi_otu_table)
otu_removal <- csi_otu_table[, which(colSums(csi_otu_table) >= 2)]
dim(otu_removal)
csi_low_remov <- otu_removal[which(rowSums(otu_removal) >= 13000), ]
dim(csi_low_remov)
odd.sites <- c("CSI101")
otu_final <- csi_low_remov[setdiff(rownames(csi_low_remov), odd.sites), ]
design_final <- design[setdiff(rownames(design), odd.sites), ]
all.equal(rownames(design_final), rownames(otu_final))
csi_pres_abs <- (otu_final > 0) * 1
csi_relabun <- otu_final
for (i in 1:dim(otu_final)[1]) {
csi_relabun[i, ] <- otu_final[i, ]/sum(otu_final[i,
])
}
rowSums(otu_final)
otu_rarefy <- rrarefy(otu_final, 13000)
new_csi <- cbind(design_final,csi_relabun)
df <- decostand(csi_relabun, method="hellinger")
#double check if you need hellinger transformation of relative abundance data
treatments1 <- as.factor(design_final$Salinity)
levels(treatments1) <- c("0","5","9","13")
treatments2 <- as.factor(design_final$Dispersal)
levels(treatments2) <- c("2","3")
date_1 <- as.factor(design_final$Date2)
adonis = adonis(new_csi[,-c(1:15)] ~ Date2*Dispersal*Salinity, method = "bray", data = new_csi, perm=1000)
adonis
zoop <- read.csv("../data/zoop_CSI.csv", row.names=1)
str(zoop)
dim(zoop)
#removed low samples
zoop.in <- zoop[,-c(1:6)]
dim(zoop.in)
#remove CSI026
odd.sites <- c("CSI026")
zoop.in2 <- zoop.in[setdiff(rownames(zoop.in), odd.sites), ]
CSIdata.in4 <- CSIdata.in3[setdiff(rownames(CSIdata.in3), odd.sites), ]
zoop <- read.csv("../data/zoop_CSI.csv", row.names=1)
str(zoop)
dim(zoop)
zoop.in <- zoop[,-c(1:6)]
dim(zoop.in)
odd.sites <- c("CSI026")
zoop.in2 <- zoop.in[setdiff(rownames(zoop.in), odd.sites), ]
dim(zoop.in2)
zoopREL <- zoop.in2
for(i in 1:dim(zoop.in2)[1]){
zoopREL[i,] <- zoop.in2[i,]/sum(zoop.in2[i,])
}
otu_final.2 <- otu_final[setdiff(rownames(otu_final), odd.sites), ]
dim(otu_final.2)
zoopREL <- zoop.in2
for(i in 1:dim(zoop.in2)[1]){
zoopREL[i,] <- zoop.in2[i,]/sum(zoop.in2[i,])
}
dist.zoop <- vegdist(zoopREL, method = "bray")
dist.bact <- vegdist(csi_relabun, method = "bray")
otu_final.2 <- otu_final[setdiff(rownames(otu_final), odd.sites), ]
dim(otu_final.2)
zoopREL <- zoop.in2
for(i in 1:dim(zoop.in2)[1]){
zoopREL[i,] <- zoop.in2[i,]/sum(zoop.in2[i,])
}
csi_relabun <- otu_final.2
for(i in 1:dim(otu_final.2)[1]){
csi_relabun[i,] <- otu_final.2[i,]/sum(otu_final.2[i,])
}
dist.zoop <- vegdist(zoopREL, method = "bray")
zoopREL <- zoop.in2
for(i in 1:dim(zoop.in2)[1]){
zoopREL[i,] <- zoop.in2[i,]/sum(zoop.in2[i,])
}
csi_relabun.2 <- otu_final.2
for(i in 1:dim(otu_final.2)[1]){
csi_relabun.2[i,] <- otu_final.2[i,]/sum(otu_final.2[i,])
}
dist.zoop <- vegdist(zoopREL, method = "bray")
dist.bact <- vegdist(csi_relabun.2, method = "bray")
mantel.rtest(dist.zoop, dist.bact, nrepet = 999)
rowSums(otu_final)
otu_rarefy <- rrarefy(otu_final, 13000)
fisher <- fisher.alpha(otu_rarefy)
fisher
richness <- rowSums((otu_rarefy >= 1))
shannon <- diversity(otu_rarefy, "shannon")
simp.even <- apply(otu_rarefy, 1, simp_even)
J <- shannon/log(specnumber(otu_rarefy[,-c(1:1)]))
CSI.DIVsoilmicrobes <- cbind(design,richness,shannon,simp.even,J)
CSI.DIVsoilmicrobes <- cbind(design_crobes2,richness,shannon,simp.even,J)
CSI.DIVsoilmicrobes <- cbind(design_final,richness,shannon,simp.even,J)
length(design_final$rotation) == length(fisher)
all.equal(gsub("-", "", rownames(design_final)), names(fisher))
length(design_final$Salinity) == length(fisher)
all.equal(gsub("-", "", rownames(design_final)), names(fisher))
fisher.lm <- lme(fisher ~ Date2*Dispersal*Salinity, data = design_final)
fisher.lm <- lme(fisher ~ Date2*Dispersal*Salinity, random = ~1|block, data = design_final)
fisher.lm <- lme(fisher ~ Date2*Dispersal*Salinity, random = ~1|, data = design_final)
fisher.lm <- lme(fisher ~ Date2*Dispersal*Salinity, random = ~1|Replicate, data = design_final)
anova(fisher.lm)
richness.lm <- lme(richness ~ ~ Date2*Dispersal*Salinity, random = ~1|Replicate, data = design)
richness.lm <- lme(richness ~ Date2*Dispersal*Salinity, random = ~1|Replicate, data = design)
richness.lm <- lme(richness ~ Date2*Dispersal*Salinity, random = ~1|Replicate, data = design_final)
anova(richness.lm)
evenness.lm <- lme(simp.even ~ Date2*Dispersal*Salinity, random = ~1|Replicate, data = design_final)
anova(evenness.lm)
summary(fisher.lm)
fisher.lm <- lm(fisher ~ Date2*Dispersal*Salinity, data = design_final)
anova(fisher.lm)
summary(fisher.lm)
HSD <- HSD.test(fisher.lm,"Salinity", console=TRUE)
library("agricolae")
HSD <- HSD.test(fisher.lm,"Salinity", console=TRUE)
richness.lm <- lm(richness ~ Date2*Dispersal*Salinity, data = design_final)
anova(richness.lm)
summary(richness.lm)
HSD <- HSD.test(fisher.lm,"Salinity", console=TRUE)
HSD <- HSD.test(richness,"Salinity", console=TRUE)
richness.lm <- lm(richness ~ Date2*Dispersal*Salinity, data = design_final)
anova(richness.lm)
summary(richness.lm)
HSD <- HSD.test(richness,"Salinity", console=TRUE)
richness.lm <- lm(richness ~ Date2*Dispersal*Salinity, data = design_final)
anova(richness.lm)
summary(richness.lm)
HSD <- HSD.test(richness,"Salinity", console=TRUE)
HSD <- HSD.test(richness.lm,"Salinity", console=TRUE)
evenness.lm <- lm(evenness ~ Date2*Dispersal*Salinity, data = design_final)
simp.even.lm <- lm(simp.even ~ Date2*Dispersal*Salinity, data = design_final)
anova(esimp.even.lm)
anova(simp.even.lm)
summary(simp.even.lm)
J.lm <- lm(J ~ Date2*Dispersal*Salinity, data = design_final)
anova(J.lm)
summary(J.lm)
HSD <- HSD.test(J.lm,"Salinity", console=TRUE)
shannon.lm <- lm(shannon ~ Date2*Dispersal*Salinity, data = design_final)
anova(shannon.lm)
summary(shannon.lm)
HSD <- HSD.test(shannon.lm,"Salinity", console=TRUE)
p <- ggplot(CSI.DIVsoilmicrobes, aes(rotation,shannon))
p + geom_boxplot() + theme_bw()
p <- ggplot(CSI.DIVsoilmicrobes, aes(salinity,shannon))
p + geom_boxplot() + theme_bw()
p <- ggplot(CSI.DIVsoilmicrobes, aes(Salinity,shannon))
p + geom_boxplot() + theme_bw()
p + geom_boxplot() + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor =     element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14),
axis.text.x = element_text(vjust=0.65, hjust=0.5, angle=30, size=14), panel.border =
element_rect(colour = "black",size=1.25)) + theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("Crop Diversity") + ylab("Shannon Diversity Index (H')") +
scale_x_discrete(breaks=c("fallow", "CSW-2cov", "CSW-1cov", "CSW", "CS", "C-1cov", "C"),
labels=c("fallow", "CSW_2cov", "CSW_1cov", "CSW", "CS","C_1cov", "mC"))
CSI.DIVsoilmicrobes <- cbind(design_final,richness,shannon,simp.even,J)
write.table(CSI.DIVsoilmicrobes, file="CSI.DIVsoilmicrobes.csv", sep=",", col.names=NA)
p <- ggplot(CSI.DIVsoilmicrobes, aes(Salinity,shannon))
p + geom_boxplot() + theme_bw()
p + geom_boxplot() + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor =     element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14),
axis.text.x = element_text(vjust=0.65, hjust=0.5, angle=30, size=14), panel.border =
element_rect(colour = "black",size=1.25)) + theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("Crop Diversity") + ylab("Shannon Diversity Index (H')") +
scale_x_discrete(breaks=c("fallow", "CSW-2cov", "CSW-1cov", "CSW", "CS", "C-1cov", "C"),
labels=c("fallow", "CSW_2cov", "CSW_1cov", "CSW", "CS","C_1cov", "mC"))
p + geom_boxplot() + theme_bw()
p + geom_boxplot() + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor =     element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.title=element_text(vjust=1,size=16,face="bold")
p <- ggplot(CSI.DIVsoilmicrobes, aes(Salinity,shannon))
p <- ggplot(CSI.DIVsoilmicrobes, aes(Salinity,shannon))
p + geom_boxplot() + theme_bw()
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
p + geom_boxplot() + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
p <- ggplot(CSI.DIVsoilmicrobes, aes(group=Salinity,shannon))
p + geom_boxplot() + theme_bw()
p <- ggplot(CSI.DIVsoilmicrobes, aes(x=Salinity,y=shannon))
p + geom_boxplot() + theme_bw()
p + geom_boxplot() + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
p <- ggplot(CSI.DIVsoilmicrobes, aes(Salinity,shannon))
p + geom_point()
p + geom_boxplot()
p <- ggplot(CSI.DIVsoilmicrobes, aes(Salinity,shannon))
p + geom_points()
p + geom_point()
p + geom_smooth(method="lm")
p + geom_boxplot() + theme_bw()
p + geom_smooth(method="lm") + theme_bw()
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
p + geom_smooth(method="lm") + theme_bw()
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
p <- ggplot(CSI.DIVsoilmicrobes, aes(Salinity,shannon))
p + geom_smooth(method="lm") + theme_bw()
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
p <- ggplot(CSI.DIVsoilmicrobes, aes(Salinity,shannon))
p + geom_smooth(method="lm") + theme_bw()
p <- ggplot(CSI.DIVsoilmicrobes, aes(x=Salinity, y=shannon, color=Dispersal))+geom_point()
p1=p+geom_smooth(method="lm",aes(fill=Dispersal))
p1 + theme_bw()
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
p1=p+geom_smooth(method="lm",aes(fill=Dispersal))
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1.25)) + theme(axis.ticks.length=unit(0.3,"cm")) + xlab("Salinity") + ylab("Shannon Diversity Index")
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1.25)) + theme(axis.ticks.length=unit(0.3,"cm")) + xlab("Salinity") + ylab("Shannon Diversity Index") + scale_fill_discrete(name = "Dispersal",labels = c("Disp2", "Disp3"))
p1=p+geom_smooth(method="lm",aes(fill=Dispersal))
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1.25)) + theme(axis.ticks.length=unit(0.3,"cm")) + xlab("Salinity") + ylab("Shannon Diversity Index")
p1=p+geom_smooth(method="lm",aes(fill=Dispersal))
p1 + theme_classic()
p <- ggplot(CSI.DIVsoilmicrobes, aes(x=Salinity, y=shannon, color=Dispersal))+geom_point()
p1=p+geom_smooth(method="lm",aes(fill=Dispersal))
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1.25)) + theme(axis.ticks.length=unit(0.3,"cm")) + xlab("Salinity") + ylab("Shannon Diversity Index") + scale_fill_discrete(name = "Dispersal",labels = c("Disp2", "Disp3"))
