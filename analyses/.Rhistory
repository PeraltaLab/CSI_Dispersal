CSIdata.in <- read.otu("../data/CSI.shared")
CSIdata.in <- read.otu("../data/CSI.shared")
dim(CSIdata.in)
missing <- setdiff(rownames(design_crobes), rownames(CSIdata.in))
design_crobes <- design_crobes[-(which(rownames(design_crobes) == missing)), ]
all.equal(rownames(design_crobes), rownames(CSIdata.in))
dim(design_crobes)
all.equal(rownames(design_crobes), rownames(CSIdata.in))
temp <- rownames(design_crobes[which(design_crobes$Number %in% c(1, 2, 3)), ])
bac.design <- design_crobes[-(which(rownames(design_crobes) %in% temp)), ]
design_crobes2 <- droplevels(bac.design)
CSIdata.in2 <- CSIdata.in[-(which(rownames(CSIdata.in) %in% temp)), ]
dim(CSIdata.in2)
dim(design_crobes2)
CSIdat.a <- CSIdata.in2[, which(colSums(CSIdata.in2) >= 2)]
(rowSums(CSI.datd))
aa <- (rowSums(CSI.datd))
aa <- (rowSums(CSIdata))
aa <- (rowSums(CSIdataa))
CSIdataa <- read.otu("../data/CSI.shared")
aa <- (rowSums(CSIdat.a))
aa
head(CSIdata.b)
CSIdat.b <- CSIdat.a[which(rowSums(CSIdat.a) >= 20000), ]
head(CSIdata.b)
bac.design <- design_crobes[-(which(rownames(design_crobes) %in% temp)), ]
design_crobes2 <- droplevels(bac.design)
dim(design_crobes2)
CSIdata.in2 <- CSIdata.in[-(which(rownames(CSIdata.in) %in% temp)), ]
dim(CSIdata.in2)
CSIdat.a <- CSIdata.in2[, which(colSums(CSIdata.in2) >= 2)]
min(rowSums(CSIdat.a))
aa <- (rowSums(CSIdat.a))
aa
CSIdat.b <- CSIdat.a[which(rowSums(CSIdat.a) >= 13000), ]
head(CSIdata.b)
head(CSIdat.b)
dim(CSIdat.b)
odd.sites <- c("CSI101")
CSIdata.in3 <- CSIdat.b[setdiff(rownames(CSIdat.b), odd.sites), ]
design2 <- design[setdiff(rownames(design), odd.sites), ]
dim(design2)
dim(CSIdata.in3)
missing <- setdiff(rownames(design2), rownames(CSIdata.in3))
missing <- setdiff(rownames(design2), rownames(CSIdata.in3))
design3 <- design2[-(which(rownames(design2) == missing)), ]
dim(design3)
CSIdata.in3[, 1]
design3[, 1]
View(design2)
design <- read.csv("../data/CSI_Design_ENV_NoSourceTanks.csv", row.names=1)
head(design)
str(design)
design <- read.csv("../data/CSI_Design_ENV_NoSourceTanks.csv", row.names=1)
head(design)
str(design)
design <- read.csv("../data/CSI_Design_ENV_NoSourceTanks.csv", row.names=1)
head(design)
str(design)
View(design)
design_crobes <- read.csv("../data/design_CSI.csv", row.names=1)
View(design_crobes)
rm(list = ls())
setwd("~/GitHub/CSI_Dispersal/analyses") #set up by AP
se <- function(x, ...) {
sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))
}
ci <- function(x, ...) {
1.96 * sd(x, na.rm = TRUE)
}
source("../bin/DiversityFunctions.R")
source("../bin/MothurTools.R")
require("vegan")
require("dplyr")
require("nlme")
require("reshape")
require("BiodiversityR")
require("ecodist")
require("ggplot2")
require("ade4")
require("png")
design <- read.csv("../data/CSI_Design_ENV_NoSourceTanks.csv", row.names=1)
head(design)
str(design)
treatments1 <- as.factor(design$Salinity)
levels(treatments1) <- c("0","5","9","13")
treatments2 <- as.factor(design$Dispersal)
levels(treatments2) <- c("2","3")
design_crobes <- read.csv("../data/design_CSI.csv", row.names=1)
design_crobes <- design_crobes[-c(grep("mock community", design_crobes$CSI_ID)), ]
dim(design_crobes)
CSIdata.in <- read.otu("../data/CSI.shared")
dim(CSIdata.in)
missing <- setdiff(rownames(design_crobes), rownames(CSIdata.in))
design_crobes <- design_crobes[-(which(rownames(design_crobes) == missing)), ]
dim(design_crobes)
all.equal(rownames(design_crobes), rownames(CSIdata.in))
temp <- rownames(design_crobes[which(design_crobes$Number %in% c(1, 2, 3)), ])
bac.design <- design_crobes[-(which(rownames(design_crobes) %in% temp)), ]
design_crobes2 <- droplevels(bac.design)
dim(design_crobes2)
CSIdata.in2 <- CSIdata.in[-(which(rownames(CSIdata.in) %in% temp)), ]
dim(CSIdata.in2)
CSIdat.a <- CSIdata.in2[, which(colSums(CSIdata.in2) >= 2)]
dim(CSIdat.a)
CSIdat.b <- CSIdat.a[which(rowSums(CSIdat.a) >= 13000), ]
head(CSIdat.b)
dim(CSIdat.b)
dim(CSIdat.a)
missing <- setdiff(rownames(design2), rownames(CSIdata.in3))
missing <- setdiff(rownames(design), rownames(CSIdat.b))
design2 <- design[-(which(rownames(design) == missing)), ]
missing <- setdiff(rownames(design), rownames(CSIdat.b))
missing <- setdiff(rownames(CSIdat.b), rownames(design) )
design <- design[-(which(rownames(design) == missing)), ]
dim(design)
missing <- setdiff(rownames(CSIdat.b), rownames(design) )
design <- design[-(which(rownames(CSIdat.b) == missing)), ]
dim(design)
design <- read.csv("../data/CSI_Design_ENV_NoSourceTanks.csv", row.names=1)
head(design)
str(design)
missing <- setdiff(rownames(CSIdat.b), rownames(design) )
design2 <- design[-(which(rownames(CSIdat.b) == missing)), ]
dim(design2)
odd.sites <- c("CSI101")
CSIdata.in3 <- CSIdat.b[setdiff(rownames(CSIdat.b), odd.sites), ]
design2 <- design[setdiff(rownames(design), odd.sites), ]
dim(design2)
dim(CSIdata.in3)
design2[,1]
head(design2)
View(design2)
missing <- setdiff(rownames(design), rownames(CSIdata.in))
design <- design[-(which(rownames(design) == missing)), ]
dim(design)
all.equal(rownames(design), rownames(CSIdata.in))
CSIdata.in3 <- CSIdat.b[setdiff(rownames(CSIdat.b), odd.sites), ]
design2 <- design[setdiff(rownames(design), odd.sites), ]
dim(design2)
dim(CSIdata.in3)
all.equal(rownames(design), rownames(CSIdata.in))
design2 <- design[setdiff(rownames(design), odd.sites), ]
dim(design2)
View(design2)
all.equal(rownames(design2), rownames(CSIdata.in3))
CSIdataREL <- CSIdata.in3
for(i in 1:dim(CSIdata.in3)[1]){
CSIdataREL[i,] <- CSIdata.in3[i,]/sum(CSIdata.in3[i,])
}
CSIdataREL.log <- decostand(CSIdataREL, method="hellinger")
CSIdataPA <- (CSIdata.in3 > 0) * 1
#import taxonomy file - simplified name
CSI.tax1 <- read.tax(taxonomy = "../data/CSI.0.03.cons.taxonomy")
#create tax table .csv and export
write.table(CSI.tax1, file = "tax.csv", sep = ",",
col.names = NA)
newCSIdata <- cbind(design2,CSIdata.in3)
str(newCSIdata)
adonis = adonis(newCSIdata[,-c(1:15)] ~ Dispersal*Salinity, method = "bray", data = newCSIdata, perm=1000)
adonis
capture.output(adonis(newCSIdata[,-c(1:15)] ~ Dispersal*Salinity, method = "bray", data = newCSIdata, perm=1000), file="disper_sal_permanova1.doc")
sampleREL.dist1 <- vegdist(CSIdataREL, method="bray")
CSI_pcoa1 <- cmdscale(sampleREL.dist1, k=3, eig=TRUE, add=FALSE)
explainvar1a <- round(CSI_pcoa1$eig[1] / sum(CSI_pcoa1$eig), 3) * 100
explainvar2a <- round(CSI_pcoa1$eig[2] / sum(CSI_pcoa1$eig), 3) * 100
sum.eiga <- sum(explainvar1a, explainvar2a)
explainvar1a
explainvar2a
points1a <- cbind(as.data.frame(CSI_pcoa1$points), treatments1)
treatments1 <- as.factor(design2$Salinity)
levels(treatments1) <- c("0","5","9","13")
treatments2 <- as.factor(design2$Dispersal)
levels(treatments2) <- c("2","3")
points1a <- cbind(as.data.frame(CSI_pcoa1$points), treatments1)
L.centroids1a <- melt(points1a, id="treatments1", measure.vars = c("V1", "V2"))
centroids1a <- cast(L.centroids1a, variable ~ treatments1, mean)
centroids.se1a <- cast(L.centroids1a, variable ~ treatments1, se)
centroids.sd1a <- cast(L.centroids1a, variable ~ treatments1, sd)
cent.dataframe1a <- t(data.frame(rbind(centroids1a[1,-1], centroids1a[2,-1],
centroids.sd1a[1,-1],centroids.sd1a[2,-1])))
colnames(cent.dataframe1a) <- c("V1", "V2", "V1e", "V2e")
cent.treats1a <- rownames(cent.dataframe1a)
df1a <- as.data.frame(cent.dataframe1a)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=cent.treats1a)) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("0","5","9","13"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00")) +
geom_point(shape=1, size = 5,colour = "black") +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (21.7%)") + ylab("PCoA 2 (6.6%)") +
labs(color = "Salinity") +
guides(colour = guide_legend(override.aes = list(pch=21, size = 4, colour="black",
fill=c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00"))))
ggsave("16SrRNA_CSI_Rplot_Salinity.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
points2 <- cbind(as.data.frame(CSI_pcoa1$points), treatments2)
L.centroids2 <- melt(points2, id="treatments2", measure.vars = c("V1", "V2"))
centroids2 <- cast(L.centroids2, variable ~ treatments2, mean)
centroids.se2 <- cast(L.centroids2, variable ~ treatments2, se)
centroids.sd2 <- cast(L.centroids2, variable ~ treatments2, sd)
cent.dataframe2 <- t(data.frame(rbind(centroids2[1,-1], centroids2[2,-1],
centroids.sd2[1,-1],centroids.sd2[2,-1])))
colnames(cent.dataframe2) <- c("V1", "V2", "V1e", "V2e")
cent.treats2 <- rownames(cent.dataframe2)
df2 <- as.data.frame(cent.dataframe2)
plot2 <- ggplot(df2, aes(x=V1, y=V2, colour=cent.treats2)) + theme_bw()
plot2 + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("0","1","2","3"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00")) +
geom_point(shape=1, size = 5,colour = "black") +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (21.7%)") + ylab("PCoA 2 (6.6%)") +
labs(color = "Dispersal Method") +
guides(colour = guide_legend(override.aes = list(pch=21, size = 4, colour="black",
fill=c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00"))))
df2 <- as.data.frame(cent.dataframe2)
plot2 <- ggplot(df2, aes(x=V1, y=V2, colour=cent.treats2)) + theme_bw()
plot2 + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("2","3"),   values = c("#FF9933", "#66CC00")) +
geom_point(shape=1, size = 5,colour = "black") +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (21.7%)") + ylab("PCoA 2 (6.6%)") +
labs(color = "Dispersal Method") +
guides(colour = guide_legend(override.aes = list(pch=21, size = 4, colour="black",
fill=c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00"))))
df2 <- as.data.frame(cent.dataframe2)
plot2 <- ggplot(df2, aes(x=V1, y=V2, colour=cent.treats2)) + theme_bw()
plot2 + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("2","3"),   values = c("#FF9933", "#66CC00")) +
geom_point(shape=1, size = 5,colour = "black") +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (21.7%)") + ylab("PCoA 2 (6.6%)") +
labs(color = "Dispersal Method") +
guides(colour = guide_legend(override.aes = list(pch=21, size = 4, colour="black",
fill=c(#FF9933", "#66CC00"))))
ggsave("16SrRNA_CSI_Rplot_Dispersal.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
df2 <- as.data.frame(cent.dataframe2)
df2 <- as.data.frame(cent.dataframe2)
plot2 <- ggplot(df2, aes(x=V1, y=V2, colour=cent.treats2)) + theme_bw()
plot2 + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("2","3"),   values = c("#FF9933", "#66CC00")) +
geom_point(shape=1, size = 5,colour = "black") +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (21.7%)") + ylab("PCoA 2 (6.6%)") +
labs(color = "Dispersal Method") +
guides(colour = guide_legend(override.aes = list(pch=21, size = 4, colour="black",
fill=c(#FF9933", "#66CC00"))))
ggsave("16SrRNA_CSI_Rplot_Dispersal.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
df2 <- as.data.frame(cent.dataframe2)
df2 <- as.data.frame(cent.dataframe2)
plot2 <- ggplot(df2, aes(x=V1, y=V2, colour=cent.treats2)) + theme_bw()
plot2 + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("2","3"),   values = c("#FF9933", "#66CC00")) +
geom_point(shape=1, size = 5,colour = "black") +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (21.7%)") + ylab("PCoA 2 (6.6%)") +
labs(color = "Dispersal") +
guides(colour = guide_legend(override.aes = list(pch=21, size = 4, colour="black",
fill=c(#FF9933", "#66CC00"))))
ggsave("16SrRNA_CSI_Rplot_Dispersal.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
df2 <- as.data.frame(cent.dataframe2)
df2 <- as.data.frame(cent.dataframe2)
plot2 <- ggplot(df2, aes(x=V1, y=V2, colour=cent.treats2)) + theme_bw()
plot2 + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("2","3"),   values = c("#FF9933", "#66CC00")) +
geom_point(shape=1, size = 5,colour = "black") +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (21.7%)") + ylab("PCoA 2 (6.6%)") +
labs(color = "Dispersal") +
guides(colour = guide_legend(override.aes = list(pch=21, size = 4, colour="black",
fill=c("#FF9933", "#66CC00"))))
ggsave("16SrRNA_CSI_Rplot_Dispersal.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
plot1a + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("0","5","9","13"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00")) +
geom_point(shape=1, size = 5,colour = "black", aes(shape = factor(Dispersal)) +
())
df1a <- as.data.frame(cent.dataframe1a)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=cent.treats1a)) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("0","5","9","13"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00")) +
geom_point(shape=1, size = 5,colour = "black", aes(shape = factor(Dispersal)) +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (21.7%)") + ylab("PCoA 2 (6.6%)") +
labs(color = "Salinity") +
guides(colour = guide_legend(override.aes = list(pch=21, size = 4, colour="black",
fill=c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00"))))
ggsave("16SrRNA_CSI_Rplot_SalinityDisp.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
plot1a + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("0","5","9","13"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00")) +
geom_point(aes(shape = factor(Dispersal)) +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (21.7%)") + ylab("PCoA 2 (6.6%)") +
labs(color = "Salinity") +
guides(colour = guide_legend(override.aes = list(pch=21, size = 4, colour="black",
fill=c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00"))))
ggsave("16SrRNA_CSI_Rplot_SalinityDisp.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
df1a <- as.data.frame(cent.dataframe1a)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=cent.treats1a)) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("0","5","9","13"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00")) +
geom_point(aes(shape = factor(Dispersal)) +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (21.7%)") + ylab("PCoA 2 (6.6%)") +
labs(color = "Salinity") +
guides(colour = guide_legend(override.aes = list(pch=21, size = 4, colour="black",
fill=c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00"))))
ggsave("16SrRNA_CSI_Rplot_SalinityDisp.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
df1a <- as.data.frame(cent.dataframe1a)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=cent.treats1a)) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("0","5","9","13"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00")) +
geom_point(aes(shape = factor(Dispersal))) +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (21.7%)") + ylab("PCoA 2 (6.6%)") +
labs(color = "Salinity") +
guides(colour = guide_legend(override.aes = list(pch=21, size = 4, colour="black",
fill=c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00"))))
df1a <- as.data.frame(cent.dataframe1a)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=cent.treats1a)) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("0","5","9","13"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00")) +
geom_point(size = 5,colour = "black") + scale_shape_manual( values = c(1,5)) +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (21.7%)") + ylab("PCoA 2 (6.6%)") +
labs(color = "Salinity") +
guides(colour = guide_legend(override.aes = list(pch=21, size = 4, colour="black",
fill=c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00"))))
ggsave("16SrRNA_CSI_Rplot_SalinityDisp.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
df1a <- as.data.frame(cent.dataframe1a)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=cent.treats1a)) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("0","5","9","13"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00")) +
geom_point(size = 5,colour = "black") + scale_shape_manual(labels = c("2","3"), values = c(1,5)) +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (21.7%)") + ylab("PCoA 2 (6.6%)") +
labs(color = "Salinity") +
guides(colour = guide_legend(override.aes = list(pch=21, size = 4, colour="black",
fill=c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00"))))
ggsave("16SrRNA_CSI_Rplot_SalinityDisp.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
df1a <- as.data.frame(cent.dataframe1a)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=cent.treats1a)) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("0","5","9","13"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00")) +
geom_point(size = 5,colour = "black") + scale_shape_manual(labels = c("2","3"), values = c(1,5)) +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (21.7%)") + ylab("PCoA 2 (6.6%)")
ggsave("16SrRNA_CSI_Rplot_SalinityDisp.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
str(newCSIdata)
adonis = adonis(newCSIdata[,-c(1:15)] ~ Date2*Dispersal*Salinity, method = "bray", data = newCSIdata, perm=1000)
adonis
zoop <- read.csv("../data/zoop_CSI.csv", row.names=1)
str(zoop)
zoop <- read.csv("../data/zoop_CSI.csv", row.names=1)
str(zoop)
zoopREL <- zoop
for(i in 1:dim(zoop)[1]){
zoopREL[i,] <- zoop[i,]/sum(zoop[i,])
}
zoop <- read.csv("../data/zoop_CSI.csv", row.names=1)
str(zoop)
zoopREL <- zoop
for(i in 1:dim(zoop)[1]){
zoopREL[i,] <- zoop[i,]/sum(zoop[i,])
}
aa <- (rowSums(zoopREL))
aa <- (rowSums(zoop))
zoop <- read.csv("../data/zoop_CSI.csv", row.names=1)
str(zoop)
aa <- (rowSums(zoop))
str(zoop)
aa <- (colSums(zoop))
zoop.in <- subset(zoop([,-c(1:6)])
zoop.in <- zoop[,-c(1:6)]
dim(zoop.in)
zoop.in2 <- zoop.in[which(rowSums(zoop.in) >= 10), ]
dim(zoop.in2)
zoopREL <- zoop.in2
for(i in 1:dim(zoop.in2)[1]){
zoopREL[i,] <- zoop.in2[i,]/sum(zoop.in2[i,])
}
dist.zoop <- vegdist(zoopREL, method = "bray")
dist.bact <- vegdist(CSIdataREL, method = "bray")
mantel.rtest(dist.zoop, dist.bact, nrepet = 999)
CSIdataREL <- CSIdata.in3
for(i in 1:dim(CSIdata.in3)[1]){
CSIdataREL[i,] <- CSIdata.in3[i,]/sum(CSIdata.in3[i,])
}
dist.zoop <- vegdist(zoopREL, method = "bray")
dist.bact <- vegdist(CSIdataREL, method = "bray")
dim(dist.zoop)
str(dist.zoop)
dim(zoopREL)
dim(CSIdataREL)
zoop <- read.csv("../data/zoop_CSI.csv", row.names=1)
str(zoop)
dim(zoop)
dim(newCSIdata)
zoop.in <- zoop[,-c(1:6)]
dim(zoop.in)
zoop.in2 <- zoop.in[which(colSums(zoop.in) >= 10), ]
dim(zoop.in2)
zoop <- read.csv("../data/zoop_CSI.csv", row.names=1)
str(zoop)
dim(zoop)
zoop.in <- zoop[,-c(1:6)]
zoop.in2 <- zoop.in[which(rowSums(zoop.in) >= 10), ]
dim(zoop.in2)
zoop <- read.csv("../data/zoop_CSI.csv", row.names=1)
str(zoop)
dim(zoop)
zoop.in <- zoop[,-c(1:6)]
dim(zoop.in)
str(zoop.in)
aa <- (rowSums(zoop.in))
aa
odd.sites <- c("CSI026")
zoop.in2 <- zoop.in[setdiff(rownames(zoop.in), odd.sites), ]
CSIdataREL2 <- CSIdataREL[setdiff(rownames(CSIdataREL), odd.sites), ]
dim(zoop.in2)
dim(CSIdataREL2)
zoopREL <- zoop.in2
for(i in 1:dim(zoop.in2)[1]){
zoopREL[i,] <- zoop.in2[i,]/sum(zoop.in2[i,])
}
CSIdata.in4 <- CSIdata.in3[setdiff(rownames(CSIdata.in3), odd.sites), ]
dim(CSIdata.in4)
zoopREL <- zoop.in2
for(i in 1:dim(zoop.in2)[1]){
zoopREL[i,] <- zoop.in2[i,]/sum(zoop.in2[i,])
}
CSIdataREL2 <- CSIdata.in4
for(i in 1:dim(CSIdata.in4)[1]){
CSIdataREL2[i,] <- CSIdata.in4[i,]/sum(CSIdata.in4[i,])
}
dist.zoop <- vegdist(zoopREL, method = "bray")
dist.bact <- vegdist(CSIdataREL, method = "bray")
mantel.rtest(dist.zoop, dist.bact, nrepet = 999)
dist.zoop <- vegdist(zoopREL, method = "bray")
dist.bact <- vegdist(CSIdataREL2, method = "bray")
mantel.rtest(dist.zoop, dist.bact, nrepet = 999)
