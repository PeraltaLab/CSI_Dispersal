theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (17.2%)") + ylab("PCoA 2 (7.4%)") +
labs(fill = "Salinity", shape = "Date") +
guides(fill = guide_legend(override.aes = list(pch=21, size = 4, colour="black")),
shape = guide_legend(override.aes = list(size = 4, fill="black")))
df1a <- as.data.frame(pcoa.cent.dataframe)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=pcoa.col, shape = pcoa.shape,
group = interaction(pcoa.col, pcoa.shape))) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(values = c("black", "blue", "green", "red")) +
#scale_fill_manual(labels = c("0","5","9","13"),
#values = c("#FFFFFF", "#00FFFF", "#33CCCC", "#0066CC")) +
scale_shape_manual(labels = c("0","18","45"),
values = c(22, 21, 24)) +
coord_cartesian(xlim = c(-0.25, 0.5), ylim = c(-0.35, 0.3)) +
theme(axis.title = element_text(size=18), axis.text=element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (17.2%)") + ylab("PCoA 2 (7.4%)") +
labs(fill = "Salinity", shape = "Date") +
guides(fill = guide_legend(override.aes = list(pch=21, size = 4, colour="black")),
shape = guide_legend(override.aes = list(size = 4, fill="black")))
ggsave("../figures/16SrRNA_CSI_Rplot_SalinityDispersal_NoSource.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=900, limitsize=TRUE)
df1a <- as.data.frame(pcoa.cent.dataframe)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=pcoa.col, shape = pcoa.shape,
group = interaction(pcoa.col, pcoa.shape))) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
#scale_colour_manual(values = c("black", "blue", "green", "red")) +
scale_fill_manual(labels = c("0","5","9","13"),
values = c("#FFFFFF", "#00FFFF", "#33CCCC", "#0066CC")) +
scale_shape_manual(labels = c("0","18","45"),
values = c(22, 21, 24)) +
coord_cartesian(xlim = c(-0.25, 0.5), ylim = c(-0.35, 0.3)) +
theme(axis.title = element_text(size=18), axis.text=element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (17.2%)") + ylab("PCoA 2 (7.4%)") +
labs(fill = "Salinity", shape = "Date") +
guides(fill = guide_legend(override.aes = list(pch=21, size = 4, colour="black")),
shape = guide_legend(override.aes = list(size = 4, fill="black")))
df1a <- as.data.frame(pcoa.cent.dataframe)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=pcoa.col, shape = pcoa.shape,
group = interaction(pcoa.col, pcoa.shape))) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(values = c("black", "blue", "green", "red")) +
#scale_fill_manual(labels = c("0","5","9","13"),
values = c("#FFFFFF", "#00FFFF", "#33CCCC", "#0066CC")) +
df1a <- as.data.frame(pcoa.cent.dataframe)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=pcoa.col, shape = pcoa.shape,
group = interaction(pcoa.col, pcoa.shape))) + theme_bw()
df1a <- as.data.frame(pcoa.cent.dataframe)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=pcoa.col, shape = pcoa.shape,
group = interaction(pcoa.col, pcoa.shape))) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(values = c("black", "blue", "green", "red"))
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=pcoa.col, shape = pcoa.shape,
group = interaction(pcoa.col, pcoa.shape))) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(values = c("black", "blue", "green", "red")) +
#scale_fill_manual(labels = c("0","5","9","13"),
#values = c("#FFFFFF", "#00FFFF", "#33CCCC", "#0066CC")) +
scale_shape_manual(labels = c("0","18","45"),
values = c(22, 21, 24)) +
coord_cartesian(xlim = c(-0.25, 0.5), ylim = c(-0.35, 0.3)) +
theme(axis.title = element_text(size=18), axis.text=element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (17.2%)") + ylab("PCoA 2 (7.4%)") +
labs(fill = "Salinity", shape = "Date") +
guides(fill = guide_legend(override.aes = list(pch=21, size = 4, colour="black")),
shape = guide_legend(override.aes = list(size = 4, fill="black")))
df1a2 <- as.data.frame(pcoa.cent.dataframe2)
plot1a2 <- ggplot(df1a2, aes(x=V1, y=V2, colour=pcoa.col2, shape = pcoa.shape2,
group = interaction(pcoa.col2, pcoa.shape2))) + theme_bw()
# run for source tanks only
csi.div.source1 <- subset(csi.relabun.full, Number == "1")
csi.div.source2 <- subset(csi.relabun.full, Number == "2")
csi.div.source1 #salt source
csi.div.source2 #fresh source
csi.relabun.full2 <- rbind(csi.div.source1,csi.div.source2)
sampleREL.dist2 <- vegdist(csi.relabun.full2[,-c(1:8)], method="bray")
# PERMANOVA
adonis2 <- adonis(csi.relabun.full2[,-c(1:8)] ~ Date*Dispersal*Salinity, method = "bray", data = csi.relabun.full2, perm=1000)
adonis2
# Principal Coordinates Analysis - WITH SOURCE
CSI_pcoa2 <- cmdscale(sampleREL.dist2, k=3, eig=TRUE, add=FALSE)
# Classical (Metric) Multidimensional Scaling; returns PCoA coordinates
# eig=TRUE returns eigenvalues; k = # of dimensions to calculate
explainvar1b <- round(CSI_pcoa2$eig[1] / sum(CSI_pcoa2$eig), 3) * 100
explainvar2b <- round(CSI_pcoa2$eig[2] / sum(CSI_pcoa2$eig), 3) * 100
sum.eigb <- sum(explainvar1b, explainvar2b)
explainvar1b #29.1
explainvar2b #9.8
#all.equal(rownames(csi.relabun.full2), rownames(csi_relabun))
pcoa.groups2 <- paste(csi.relabun.full2$Date, csi.relabun.full2$Number, sep = "_")
pcoa.points2 <- data.frame(CSI_pcoa2$points, group = pcoa.groups2)
# Calculate Centroids (mean and SE)
pcoa.L.centroids2 <- melt(pcoa.points2, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids2 <- acast(pcoa.L.centroids2, variable ~ group, mean)
pcoa.centroids.se2 <- acast(pcoa.L.centroids2, variable ~ group, se)
pcoa.centroids.sd2 <- acast(pcoa.L.centroids2, variable ~ group, sd)
# Combine
pcoa.cent.dataframe2 <- cbind(t(pcoa.centroids2), t(pcoa.centroids.se2))
colnames(pcoa.cent.dataframe2) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats2 <- rownames(pcoa.cent.dataframe2)
pcoa.col2 <- as.factor(sapply(strsplit(pcoa.cent.treats2, "_"), `[`, 2)) # Tank Number
pcoa.shape2 <- as.factor(sapply(strsplit(pcoa.cent.treats2, "_"), `[`, 1))  # Date
df1a2 <- as.data.frame(pcoa.cent.dataframe2)
plot1a2 <- ggplot(df1a2, aes(x=V1, y=V2, colour=pcoa.col2, shape = pcoa.shape2,
group = interaction(pcoa.col2, pcoa.shape2))) + theme_bw()
plot1a2 + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col2), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(labels = c("saltwater","freshwater"),
values = c("#FFFFFF", "#0066CC")) +
#scale_fill_manual(labels = c("saltwater","freshwater"),
#values = c("#FFFFFF", "#0066CC")) +
scale_shape_manual(labels = c("0","18","45"),
values = c(22, 21, 24)) +
theme(axis.title = element_text(size=18), axis.text=element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (29.1%)") + ylab("PCoA 2 (9.8%)") +
labs(fill = "Dispersal Source", shape = "Day of Experiment") +
guides(fill = guide_legend(override.aes = list(pch=21, size = 4, colour="black")),
shape = guide_legend(override.aes = list(size = 4, fill="black")))
pcoa.groups2 <- paste(csi.relabun.full2$Date, csi.relabun.full2$Number, sep = "_")
pcoa.points2 <- data.frame(CSI_pcoa2$points, group = pcoa.groups2)
pcoa.L.centroids2 <- melt(pcoa.points2, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids2 <- acast(pcoa.L.centroids2, variable ~ group, mean)
pcoa.centroids.se2 <- acast(pcoa.L.centroids2, variable ~ group, se)
pcoa.centroids.sd2 <- acast(pcoa.L.centroids2, variable ~ group, sd)
pcoa.cent.dataframe2 <- cbind(t(pcoa.centroids2), t(pcoa.centroids.se2))
colnames(pcoa.cent.dataframe2) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats2 <- rownames(pcoa.cent.dataframe2)
pcoa.col2 <- as.factor(sapply(strsplit(pcoa.cent.treats2, "_"), `[`, 2)) # Tank Number
pcoa.shape2 <- as.factor(sapply(strsplit(pcoa.cent.treats2, "_"), `[`, 1))  # Date
df1a2 <- as.data.frame(pcoa.cent.dataframe2)
plot1a2 <- ggplot(df1a2, aes(x=V1, y=V2, colour=pcoa.col2, shape = pcoa.shape2,
group = interaction(pcoa.col2, pcoa.shape2))) + theme_bw()
plot1a2 + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col2), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(labels = c("saltwater","freshwater"),
values = c("#FFFFFF", "#0066CC")) +
scale_fill_manual(labels = c("saltwater","freshwater"),
values = c("#FFFFFF", "#0066CC")) +
scale_shape_manual(labels = c("0","18","45"),
values = c(22, 21, 24)) +
theme(axis.title = element_text(size=18), axis.text=element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (29.1%)") + ylab("PCoA 2 (9.8%)") +
labs(fill = "Dispersal Source", shape = "Day of Experiment") +
guides(fill = guide_legend(override.aes = list(pch=21, size = 4, colour="black")),
shape = guide_legend(override.aes = list(size = 4, fill="black")))
df3a <- as.data.frame(pcoa.cent.dataframe3)
plot1a <- ggplot(df3a, aes(x=V1, y=V2, colour=pcoa.col3, shape = pcoa.shape3,
group = interaction(pcoa.col3, pcoa.shape3))) + theme_bw()
df1a <- as.data.frame(pcoa.cent.dataframe)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=pcoa.col, shape = pcoa.shape,
group = interaction(pcoa.col, pcoa.shape))) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(values = c("black", "blue", "green", "red")) +
#scale_fill_manual(labels = c("0","5","9","13"),
#values = c("#FFFFFF", "#00FFFF", "#33CCCC", "#0066CC")) +
scale_shape_manual(labels = c("0","18","45"),
values = c(22, 21, 24)) +
coord_cartesian(xlim = c(-0.25, 0.5), ylim = c(-0.35, 0.3)) +
theme(axis.title = element_text(size=18), axis.text=element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (17.2%)") + ylab("PCoA 2 (7.4%)") +
labs(fill = "Salinity", shape = "Date") +
guides(fill = guide_legend(override.aes = list(pch=21, size = 4, colour="black")),
shape = guide_legend(override.aes = list(size = 4, fill="black")))
ggsave("../figures/16SrRNA_CSI_Rplot_SalinityDispersal_NoSource.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=900, limitsize=TRUE)
df1a2 <- as.data.frame(pcoa.cent.dataframe2)
plot1a2 <- ggplot(df1a2, aes(x=V1, y=V2, colour=pcoa.col2, shape = pcoa.shape2,
group = interaction(pcoa.col2, pcoa.shape2))) + theme_bw()
plot1a2 + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col2), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(labels = c("saltwater","freshwater"),
values = c("#FFFFFF", "#0066CC")) +
scale_fill_manual(labels = c("saltwater","freshwater"),
values = c("#FFFFFF", "#0066CC")) +
scale_shape_manual(labels = c("0","18","45"),
values = c(22, 21, 24)) +
theme(axis.title = element_text(size=18), axis.text=element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (29.1%)") + ylab("PCoA 2 (9.8%)") +
labs(fill = "Dispersal Source", shape = "Day of Experiment") +
guides(fill = guide_legend(override.aes = list(pch=21, size = 4, colour="black")),
shape = guide_legend(override.aes = list(size = 4, fill="black")))
ggsave("../figures/16SrRNA_CSI_Rplot_Source.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=900, limitsize=TRUE)
# run for source tanks only
#use csi.relabun.full dataframe
sampleREL.dist3 <- vegdist(csi.relabun.full[,-c(1:8)], method="bray")
# PERMANOVA
adonis3 <- adonis(csi.relabun.full[,-c(1:8)] ~ Date*Dispersal, method = "bray", data = csi.relabun.full, perm=1000)
adonis3
# Principal Coordinates Analysis - WITH SOURCE
CSI_pcoa3 <- cmdscale(sampleREL.dist3, k=3, eig=TRUE, add=FALSE)
# Classical (Metric) Multidimensional Scaling; returns PCoA coordinates
# eig=TRUE returns eigenvalues; k = # of dimensions to calculate
explainvar1b <- round(CSI_pcoa3$eig[1] / sum(CSI_pcoa3$eig), 3) * 100
explainvar2b <- round(CSI_pcoa3$eig[2] / sum(CSI_pcoa3$eig), 3) * 100
sum.eigb <- sum(explainvar1b, explainvar2b)
explainvar1b #20.8
explainvar2b #6.4
pcoa.groups3 <- paste(csi.relabun.full$Date, csi.relabun.full$Dispersal, sep = "_")
pcoa.points3 <- data.frame(CSI_pcoa3$points, group = pcoa.groups3)
# Calculate Centroids (mean and SE)
pcoa.L.centroids3 <- melt(pcoa.points3, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids3 <- acast(pcoa.L.centroids3, variable ~ group, mean)
pcoa.centroids.se3 <- acast(pcoa.L.centroids3, variable ~ group, se)
pcoa.centroids.sd3 <- acast(pcoa.L.centroids3, variable ~ group, sd)
# Combine
pcoa.cent.dataframe3 <- cbind(t(pcoa.centroids3), t(pcoa.centroids.se3))
colnames(pcoa.cent.dataframe3) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats3 <- rownames(pcoa.cent.dataframe3)
pcoa.col3 <- as.factor(sapply(strsplit(pcoa.cent.treats3, "_"), `[`, 2)) # Dispersal
pcoa.shape3 <- as.factor(sapply(strsplit(pcoa.cent.treats3, "_"), `[`, 1))  # Date
df3a <- as.data.frame(pcoa.cent.dataframe3)
plot1a <- ggplot(df3a, aes(x=V1, y=V2, colour=pcoa.col3, shape = pcoa.shape3,
group = interaction(pcoa.col3, pcoa.shape3))) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col3), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(labels = c("0","5","9","13", "extra"),
values = c("#FFFFFF", "#CCFF00", "#00CC00", "#336600", "darkgray")) +
scale_fill_manual(labels = c("TRT fresh","TRT fresh+salt","Control (no dispersal)","Source fresh","Source salt"),
values = c("#FFFFFF", "#CCFF00", "#00CC00", "#336600", "darkgray")) +
scale_shape_manual(labels = c("0","18","45"),
values = c(22, 21, 24)) +
theme(axis.title = element_text(size=18), axis.text=element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (20.8%)") + ylab("PCoA 2 (6.4%)") +
labs(fill = "Dispersal", shape = "Day of Experiment") +
guides(fill = guide_legend(override.aes = list(pch=21, size = 4, colour="black")),
shape = guide_legend(override.aes = list(size = 4, fill="black")))
ggsave("../figures/16SrRNA_CSI_Rplot_SourceAndTrt.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=900, limitsize=TRUE)
# run for source tanks only
#use csi.relabun.full dataframe
sampleREL.dist4 <- vegdist(csi.relabun.full[,-c(1:8)], method="bray")
Date <- csi.relabun.full$Date2
# PERMANOVA
adonis4 <- adonis(csi.relabun.full[,-c(1:8)] ~ Date*Dispersal*Salinity, method = "bray", data = csi.relabun.full, perm=1000)
adonis4
# Principal Coordinates Analysis - WITH SOURCE
CSI_pcoa4 <- cmdscale(sampleREL.dist4, k=3, eig=TRUE, add=FALSE)
# Classical (Metric) Multidimensional Scaling; returns PCoA coordinates
# eig=TRUE returns eigenvalues; k = # of dimensions to calculate
explainvar1b <- round(CSI_pcoa4$eig[1] / sum(CSI_pcoa4$eig), 3) * 100
explainvar2b <- round(CSI_pcoa4$eig[2] / sum(CSI_pcoa4$eig), 3) * 100
sum.eigb <- sum(explainvar1b, explainvar2b)
explainvar1b #20.8
explainvar2b #6.4
pcoa.groups4 <- paste(csi.relabun.full$Dispersal, csi.relabun.full$Salinity, sep = "_")
Date <- csi.relabun.full$Date2
pcoa.points4 <- data.frame(CSI_pcoa4$points, group = pcoa.groups4, date = Date)
# Calculate Centroids (mean and SE)
pcoa.L.centroids4 <- melt(pcoa.points4, id=c("group", "date"), measure.vars = c("X1", "X2"))
pcoa.centroids4 <- acast(pcoa.L.centroids4, variable ~ group + date, mean)
pcoa.centroids.se4 <- acast(pcoa.L.centroids4, variable ~ group + date, se)
pcoa.centroids.sd4 <- acast(pcoa.L.centroids4, variable ~ group + date, sd)
# Combine
pcoa.cent.dataframe4 <- cbind(t(pcoa.centroids4), t(pcoa.centroids.se4))
colnames(pcoa.cent.dataframe4) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats4 <- rownames(pcoa.cent.dataframe4)
pcoa.col4 <- as.factor(sapply(strsplit(pcoa.cent.treats4, "_"), `[`, 2)) # Salinity
pcoa.shape4 <- as.factor(sapply(strsplit(pcoa.cent.treats4, "_"), `[`, 1))  # Dispersal
pcoa.date <- as.factor(sapply(strsplit(pcoa.cent.treats4, "_"), `[`, 3))
df4a <- as.data.frame(pcoa.cent.dataframe4)
plot4a <- ggplot(df4a, aes(x=V1, y=V2, colour=pcoa.col4,
shape = pcoa.shape4, label=pcoa.date,
group = interaction(pcoa.col4, pcoa.shape4))) +
theme_bw()
plot4a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(fill=pcoa.col4), colour = "black", size=6, stroke = 0.75) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(labels = c("0","5","9","13"),
values = c("#FFFFFF", "#00FFFF", "#33CCCC", "#0066CC")) +
#scale_fill_manual(labels = c("0","5","9","13"),
#values = c("#FFFFFF", "#00FFFF", "#33CCCC", "#0066CC")) +
scale_shape_manual(labels = c("TRT fresh","TRT fresh+salt","Control (no dispersal)","Source fresh","Source salt"),
values = c(22, 21, 8, 23, 24)) +
geom_text(aes(label=pcoa.date), colour = "black",hjust=0, vjust=0, nudge_x = 0.04) +
theme(axis.title = element_text(size=18), axis.text=element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (20.8%)") + ylab("PCoA 2 (6.4%)") +
labs(fill = "Salinity", shape = "Dispersal Type") +
guides(fill = guide_legend(override.aes = list(pch=21, size = 4, colour="black")),
shape = guide_legend(override.aes = list(size = 4, fill="black")))
ggsave("../figures/16SrRNA_CSI_Rplot_SourceSalinityDispDate.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=900, limitsize=TRUE)
library("labdsv")
#bac.ind
csi_relabun.ns.2 <- csi_relabun.ns[, colSums(csi_relabun.ns) > 0.05]
bac.ind <- indval(csi_relabun.ns.2, treatments1)
levels(treatments1)
summary(bac.ind)
inds <- which(bac.ind$pval <= 0.05)
bac.indicators <- as.data.frame(matrix(NA, nrow = length(inds), ncol = 4))
colnames(bac.indicators) <- c("OTU", "Cluster", "IndVal", "Prob")
bac.indicators$OTU <- names(inds)
bac.indicators$Cluster <- bac.ind$maxcls[inds]
bac.indicators$IndVal <- bac.ind$indcls[inds]
bac.indicators$Prob <- bac.ind$pval[inds]
ind.tax <- csi.tax[which(as.character(csi.tax$OTU) %in% bac.indicators$OTU), ]
ind.tax <- ind.tax[match(ind.tax$OTU, bac.indicators$OTU), ]
indicator.bac <- cbind(bac.indicators, ind.tax[, -c(1)])
indicator.bac <- indicator.bac[order(as.numeric(indicator.bac$Cluster)), ]
table(indicator.bac$Cluster)
table(indicator.bac$Phylum)
table(indicator.bac$Cluster)
levels(treatments1)
# Export Bacteria Indicator Table
write.table(indicator.bac, "../data/BacterialIndicators.txt",
sep="\t", row.names = F, quote = F)
split(indicator.bac$Phylum, indicator.bac$Cluster)
split(indicator.bac$Class, indicator.bac$Cluster)
plot(as.factor(indicator.bac$Cluster), as.factor(indicator.bac$Phylum))
#Is there a relationship betwen bacterial community composition and decomposition rate? used matrix comparison Mantel test
str(csi.full.ns.Cmin)
df.bcc <- csi.full.ns.Cmin[,-c(1:16)] #bacteria
df.env.bcc <- csi.full.ns.Cmin[,c(1:16)] #env
df.decomp <- csi.full.ns.Cmin[,c(12:14)] #decomp
df.decompCmin <- csi.full.ns.Cmin[,c(12:15)] #decompCmin
#bray curtis for bact comm
dist.bcc <- vegdist(df.bcc, method = "bray")
#euclidean distance for leaf litter decomp
dist.decomp <- vegdist(df.decomp, method = "euclidean")
#euclidean distance for leaf litter decomp and Cmin
dist.decompCmin <- vegdist(df.decompCmin, method = "euclidean")
#matrix comparison
mantel.rtest(dist.bcc, dist.decomp, nrepet = 999) #bacteria compared to decomp correlation r = 0.231, P=0.006
mantel.rtest(dist.bcc, dist.decompCmin, nrepet = 999) #bacteria compared to decompCmin correlation r = 0.212, P=0.007
#Redundancy Analysis
f <- df.bcc ~ Maple_dmass + Spartina_dmass + Phrag_dmass + Cmin
df.rda <- dbrda(f, data=df.env.bcc, distance="bray")
anova(df.rda, by="terms", model="direct")
RsquareAdj(df.rda)
plot(df.rda)
# Phylogenetic Diversity
# Load Tree
tree <- read.tree("../data/CSI.bac.rename.tree")
tree$tip.label <- gsub("\\|", "", tree$tip.label)
sum(tree$tip.label %in% colnames(csi_otu) == FALSE)
# Small Branches
sum(tree$edge.length < 0.0000001)
# Import Unifrac Matrix
unifrac.raw <- read.delim("../data/CSI.bac.tree1.weighted.phylip.dist",
header = F, skip = 1, row.names = 1)
row.names(unifrac.raw) <- gsub("    ", "", row.names(unifrac.raw))
unifrac <- unifrac.raw[which(row.names(unifrac.raw) %in%
row.names(otu_final)),
which(row.names(unifrac.raw) %in%
row.names(otu_final))]
rownames(unifrac) <- gsub("     ", "", row.names(unifrac))
colnames(unifrac) <- rownames(unifrac)
dim(unifrac)
odd.sites <- c("CSI033","CSI101")
# Make into Distance Matrix
unifrac.dist <- as.dist(unifrac, upper = T, diag = T)
# Calculate Phylo Diversity
phylo.d <- pd(otu_final, tree, include.root = F)
phylo_final <- phylo.d[setdiff(rownames(phylo.d), odd.sites), ]
#design_final <- design.full[setdiff(rownames(design.full), odd.sites), ]
#design.ns <- design.ns[setdiff(rownames(design.ns), odd.sites), ]
all.equal(rownames(design_final), rownames(phylo_final))
# REMOVE source tanks from otu file
# REMOVE source tanks Number 1,2,3 from otu_final and use design.ns (manually removed source tanks)
temp <- rownames(design_final[which(design_final$Number %in% c(1,2,3)), ])
phylo_final.ns <- phylo_final[-(which(rownames(phylo_final) %in% temp)), ]
dim(phylo_final.ns)
dim(design.ns.final)
csi.phylo.ns <- cbind(design.ns.final,phylo_final.ns)
# run full parametric statistical model
PD.lm <- lm(PD ~ Dispersal*Salinity*Date, data = csi.phylo.ns)
plot(PD.lm)
anova(PD.lm)
# run linear regression measured salinity used instead of 'factor' salinity
PD.reg <- lm(PD~Salinity_real, data = csi.phylo.ns)
summary(PD.reg)
# Phylogenetic Diversity - Treatment Salinity
p <- ggplot(csi.phylo.ns, aes(x=Salinity, y=PD, color=as.factor(Dispersal)))+ scale_color_manual(name="Dispersal Treatment", values=c("black","purple"), labels = c("fresh (2)", "fresh+salt (3)")) + stat_summary(fun.data=mean_cl_boot,size=0.75)
p1=p+geom_smooth(method="lm")+facet_wrap(~Date2)+facet_grid(. ~ Date2, labeller=labeller(Date2 = labels))
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Salinity", y = "Phylogenetic Diversity (PD)") + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/phylogenetic_div.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
require("VennDiagram")
require("Hmisc")
library("gridExtra")
dim(design_final)
dim(csi_pres_abs)
all.equal(rownames(design_final), rownames(csi_pres_abs))
occupants <- function(x){names(which(colSums(x) > 1))}
l.overlap <- function(x){
temp <- calculate.overlap(x)
l.temp <- length(temp)
temp2 <- temp[1: (l.temp - length(x) )]
return(rev(lengths(temp2)))
}
salt <- occupants(csi_pres_abs[which(design_final$Number == 1), ])
fresh <-  occupants(csi_pres_abs[which(design_final$Number == 2), ])
venn.plot <- draw.pairwise.venn(area1 = length(salt), area2 = length(fresh),
cross.area = length(intersect(salt, fresh)),
category = c("Salt", "Fresh"),
col = c("green", "blue"), fill = c("green", "blue"),
scaled = T, cat.pos = c(210, 140))
grid.newpage()
ggsave("../figures/vennSource.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
salt <- occupants(csi_pres_abs[which(design_final$Number == 1), ])
fresh <-  occupants(csi_pres_abs[which(design_final$Number == 2), ])
venn.plot <- draw.pairwise.venn(area1 = length(salt), area2 = length(fresh),
cross.area = length(intersect(salt, fresh)),
category = c("Salt", "Fresh"),
col = c("green", "blue"), fill = c("green", "blue"),
scaled = T, cat.pos = c(210, 140))
venn.plot
grid.newpage()
require("picante")
require("venneuler")
require("Hmisc")
require("VennDiagram")
require("Hmisc")
library("gridExtra")
all.equal(rownames(design_final), rownames(csi_pres_abs))
occupants <- function(x){names(which(colSums(x) > 1))}
l.overlap <- function(x){
temp <- calculate.overlap(x)
l.temp <- length(temp)
temp2 <- temp[1: (l.temp - length(x) )]
return(rev(lengths(temp2)))
}
salt <- occupants(csi_pres_abs[which(design_final$Number == 1), ])
fresh <-  occupants(csi_pres_abs[which(design_final$Number == 2), ])
venn.plot <- draw.pairwise.venn(area1 = length(salt), area2 = length(fresh),
cross.area = length(intersect(salt, fresh)),
category = c("Salt", "Fresh"),
col = c("green", "blue"), fill = c("green", "blue"),
scaled = T, cat.pos = c(210, 140))
plot.new()
sessionInfo()
