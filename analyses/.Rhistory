rm(list = ls())
setwd("~/GitHub/CIS_Dispersal/analyses") #set up by AP
setwd("~/GitHub/IL_Wetlands/analyses") #set up by AP
se <- function(x, ...) {
sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))
}
ci <- function(x, ...) {
1.96 * sd(x, na.rm = TRUE)
}
source("../bin/DiversityFunctions.R")
source("../bin/MothurTools.R")
require("vegan")
require("dplyr")
require("nlme")
require("reshape")
require("BiodiversityR")
require("ecodist")
require("ggplot2")
require("ade4")
require("png")
design2 <- read.csv("../data/design2_CSI.csv", row.names=1)
design2
treatments1 <- design2$Salinity
levels(treatments1) <- c("0","5","9","13")
treatments2 <- design2$Dispersal
levels(treatments2) <- c("0","1","2","3")
CSIdataa <- read.otu("../data/CSI.shared")
CSIdatb <- CSIdataa[which(rowSums(CSIdataa) >= 20000), ]
CSIdata2c <- CSIdatb[grepl("CSI[0-9][0-9]", rownames(CSIdatb)), ]
CSI.datd <- CSIdata2c[, which(colSums(CSIdata2c) >= 2)]
CSIdataPAa <- (CSI.datd > 0) * 1
CSIdataRELa <- CSI.datd
for (i in 1:dim(CSI.datd)[1]) {
CSIdataRELa[i, ] <- CSI.datd[i, ]/sum(CSI.datd[i,
])
}
CSIdataREL.loga <- decostand(CSIdataRELa, method = "log")
install.packages("mass")
install.packages("mass")
library(MASS)
da <- dist(CSIdataRELa1)
install.packages("MASS")
install.packages("MASS")
library(MASS)
da <- dist(CSIdataRELa1)
CSIdataREL.loga <- decostand(CSIdataRELa, method = "log")
da <- dist(CSIdataRELa1)
CSIdataRELa <- CSI.datd
for (i in 1:dim(CSI.datd)[1]) {
CSIdataRELa[i, ] <- CSI.datd[i, ]/sum(CSI.datd[i,
])
}
CSIdataRELa
CSIdataREL.loga <- decostand(CSIdataRELa, method = "log")
da <- vegdist(CSIdataRELa, method="bray")
fita <- metaMDS(da,k=2)
fita
CSIdataRELa <- CSI.datd
for (i in 1:dim(CSI.datd)[1]) {
CSIdataRELa[i, ] <- CSI.datd[i, ]/sum(CSI.datd[i,
])
}
da <- vegdist(CSIdataRELa, method="bray")
write.table(CSI.tax1, file = "tax.csv", sep = ",",
col.names = NA)
CSIdataRELa <- CSI.datd
for (i in 1:dim(CSI.datd)[1]) {
CSIdataRELa[i, ] <- CSI.datd[i, ]/sum(CSI.datd[i,
])
}
CSI.tax1 <- read.tax(taxonomy = "../data/CSI.0.03.cons.taxonomy")
write.table(CSI.tax1, file = "tax.csv", sep = ",",
col.names = NA)
aa <- min(rowSums(CSI.datd))
aa
design2
design3 <- read.csv(../data/design2_CSI.csv)
design3 <- read.csv(../data/design2_CSI.csv, row.names = 1)
design3 <- read.csv(../data/design2_CSI.csv", row.names = 1)
#design3 <- read.csv("E:/Grad/Mothur/mothur/design_CSI.csv", row.names = 1)
design3 <- read.csv("../data/design2_CSI.csv", row.names = 1)
newCSIdatd <- cbind(design3,CSIdataRELa)
rm(list = ls())
setwd("~/GitHub/CSI_Dispersal/analyses") #set up by AP
#Set Std Err and Conf Int
se <- function(x, ...) {
sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))
}
ci <- function(x, ...) {
1.96 * sd(x, na.rm = TRUE)
}
source("../bin/DiversityFunctions.R")
source("../bin/MothurTools.R")
require("vegan")
require("dplyr")
require("nlme")
require("reshape")
require("BiodiversityR")
require("ecodist")
require("ggplot2")
require("ade4")
require("png")
design2 <- read.csv("../data/design2_CSI.csv", row.names=1)
design2
treatments1 <- design2$Salinity
levels(treatments1) <- c("0","5","9","13")
treatments2 <- design2$Dispersal
levels(treatments2) <- c("0","1","2","3")
CSIdataa <- read.otu("../data/CSI.shared")
CSIdatb <- CSIdataa[which(rowSums(CSIdataa) >= 20000), ]
str(CSIdatb)
CSI.datd <- CSI.dataa[setdiff(rownames(CSI.dataa), odd.sites), ]
CSIdataa <- read.otu("../data/CSI.shared")
odd.sites <- c("CSI033", "CSI101")
CSI.datd.2 <- CSI.dataa[setdiff(rownames(CSI.dataa), odd.sites), ]
CSIdatb <- CSIdataa[which(rowSums(CSIdataa) >= 20000), ]
CSIdata2c <- CSIdatb[grepl("CSI[0-9][0-9]", rownames(CSIdatb)), ]
CSI.datd <- CSIdata2c[, which(colSums(CSIdata2c) >= 2)]
odd.sites <- c("CSI033", "CSI101")
CSI.datd.2 <- CSI.datd[setdiff(rownames(CSI.datd), odd.sites), ]
str(CSI.datad.2)
str(CSI.datd.2 )
str(design2)
load("/Users/arianeperalta/OneDrive - East Carolina University/Peralta_Lab_Shared/Projects/2015_CSI_Dispersal/Results_CSI_DISP/CSI_Data_Werba/Werba_Data.Rdata")
load("/Users/arianeperalta/OneDrive - East Carolina University/Peralta_Lab_Shared/Projects/2015_CSI_Dispersal/Results_CSI_DISP/CSI_Data_Werba/Werba_Data.Rdata")
load("/Users/arianeperalta/GitHub/CSI_Dispersal/data/Werba_Data.Rdata")
load("~/GitHub/CSI_Dispersal/data/Werba_Data.Rdata")
rm(list = ls())
setwd("~/GitHub/CSI_Dispersal/analyses") #set up by AP
se <- function(x, ...) {
sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))
}
ci <- function(x, ...) {
1.96 * sd(x, na.rm = TRUE)
}
source("../bin/DiversityFunctions.R")
source("../bin/MothurTools.R")
require("vegan")
require("dplyr")
require("nlme")
require("reshape")
require("BiodiversityR")
require("ecodist")
require("ggplot2")
require("ade4")
require("png")
design <- read.csv("../data/CSI_Design_ENV_NoSourceTanks.csv", row.names=1)
design
levels(treatments1) <- c("0","5","9","13")
design
treatments1 <- design$Salinity
levels(treatments1) <- c("0","5","9","13")
treatments2 <- design$Dispersal
levels(treatments2) <- c("2","3")
CSIdataa <- read.otu("../data/CSI.shared")
CSIdatb <- CSIdataa[which(rowSums(CSIdataa) >= 20000), ]
CSIdata2c <- CSIdatb[grepl("CSI[0-9][0-9]", rownames(CSIdatb)), ]
CSI.datd <- CSIdata2c[, which(colSums(CSIdata2c) >= 2)]
CSI.datd
CSIdata2c
CSIdatb
CSIdata.in <- read.otu("../data/CSI.shared")
CSIdata.in2 <- CSIdata.in[grepl("CSI[0-9][0-9]", rownames(CSIDdata.in)), ]
CSIdata.in <- read.otu("../data/CSI.shared")
CSIdata.in2 <- CSIdata.in[grepl("CSI[0-9][0-9]", rownames(CSIDdata.in)), ]
CSIdata.in2 <- CSIdata.in[grepl("CSI[0-9][0-9]", rownames(CSIdata.in)), ]
rm(list = ls())
setwd("~/GitHub/CSI_Dispersal/analyses") #set up by AP
se <- function(x, ...) {
sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))
}
ci <- function(x, ...) {
1.96 * sd(x, na.rm = TRUE)
}
source("../bin/DiversityFunctions.R")
source("../bin/MothurTools.R")
require("vegan")
require("dplyr")
require("nlme")
require("reshape")
require("BiodiversityR")
require("ecodist")
require("ggplot2")
require("ade4")
require("png")
design <- read.csv("../data/CSI_Design_ENV_NoSourceTanks.csv", row.names=1)
design
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("ecodist")
install.packages("BiodiversityR")
library("BiodiversityR", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("ecodist", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
design <- read.csv("../data/CSI_Design_ENV_NoSourceTanks.csv", row.names=1)
design
treatments1 <- as.factor(design$Salinity)
levels(treatments1) <- c("0","5","9","13")
treatments2 <- as.factor(design$Dispersal)
levels(treatments2) <- c("2","3")
design_crobes <- read.csv("../data/design_CSI.csv", row.names=1)
design_crobes
CSIdata.in <- read.otu("../data/CSI.shared")
CSIdata.in2 <- CSIdata.in[grepl("CSI[0-9][0-9]", rownames(CSIdata.in)), ]
temp <- rownames(design_crobes[which(design_crobes$Number %in% c(1, 2, 3)), ])
bac.design <- design_crobes[-(which(rownames(design_crobes) %in% temp)), ]
design <- droplevels(bac.design)
CSIdata.in2 <- CSIdata.in2[-(which(rownames(CSIdata.in2) %in% temp)), ]
str(CSIdata.in2)
str(design)
str(CSIdata.in)
rm(list = ls())
setwd("~/GitHub/CSI_Dispersal/analyses") #set up by AP
se <- function(x, ...) {
sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))
}
ci <- function(x, ...) {
1.96 * sd(x, na.rm = TRUE)
}
source("../bin/DiversityFunctions.R")
source("../bin/MothurTools.R")
require("vegan")
require("dplyr")
require("nlme")
require("reshape")
require("BiodiversityR")
require("ecodist")
require("ggplot2")
require("ade4")
require("png")
design <- read.csv("../data/CSI_Design_ENV_NoSourceTanks.csv", row.names=1)
design
treatments1 <- as.factor(design$Salinity)
levels(treatments1) <- c("0","5","9","13")
treatments2 <- as.factor(design$Dispersal)
levels(treatments2) <- c("2","3")
design_crobes <- read.csv("../data/design_CSI.csv", row.names=1)
design_crobes
CSIdata.in <- read.otu("../data/CSI.shared")
CSIdata.in2 <- CSIdata.in[grepl("CSI[0-9][0-9]", rownames(CSIdata.in)), ]
temp <- rownames(design_crobes[which(design_crobes$Number %in% c(1, 2, 3)), ])
bac.design <- design_crobes[-(which(rownames(design_crobes) %in% temp)), ]
design <- droplevels(bac.design)
CSIdata.in2 <- CSIdata.in2[-(which(rownames(CSIdata.in2) %in% temp)), ]
CSIdata.in2
design <- read.csv("../data/CSI_Design_ENV_NoSourceTanks.csv", row.names=1)
design
treatments1 <- as.factor(design$Salinity)
levels(treatments1) <- c("0","5","9","13")
treatments2 <- as.factor(design$Dispersal)
levels(treatments2) <- c("2","3")
design_crobes <- read.csv("../data/design_CSI.csv", row.names=1)
design_crobes
CSIdata.in <- read.otu("../data/CSI.shared")
CSIdata.in2 <- CSIdata.in[grepl("CSI[0-9][0-9]", rownames(CSIdata.in)), ]
temp <- rownames(design_crobes[which(design_crobes$Number %in% c(1, 2, 3)), ])
bac.design <- design_crobes[-(which(rownames(design_crobes) %in% temp)), ]
design <- droplevels(bac.design)
CSIdata.in2 <- CSIdata.in2[-(which(rownames(CSIdata.in2) %in% temp)), ]
CSIdata.in2
CSIdata <- CSIdata.in2[, which(colSums(CSIdata.in2) >= 2)]
str(CSIdata)
View(design)
View(bac.design)
View(design_crobes)
View(bac.design)
View(CSIdata)
rm(list = ls())
setwd("~/GitHub/CSI_Dispersal/analyses") #set up by AP
se <- function(x, ...) {
sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))
}
ci <- function(x, ...) {
1.96 * sd(x, na.rm = TRUE)
}
source("../bin/DiversityFunctions.R")
source("../bin/MothurTools.R")
require("vegan")
require("dplyr")
require("nlme")
require("reshape")
require("BiodiversityR")
require("ecodist")
require("ggplot2")
require("ade4")
require("png")
design <- read.csv("../data/CSI_Design_ENV_NoSourceTanks.csv", row.names=1)
design
treatments1 <- as.factor(design$Salinity)
levels(treatments1) <- c("0","5","9","13")
treatments2 <- as.factor(design$Dispersal)
levels(treatments2) <- c("2","3")
design_crobes <- read.csv("../data/design_CSI.csv", row.names=1)
design_crobes
CSIdata.in <- read.otu("../data/CSI.shared")
CSIdata.in2 <- CSIdata.in[grepl("CSI[0-9][0-9]", rownames(CSIdata.in)), ]
temp <- rownames(design_crobes[which(design_crobes$Number %in% c(1, 2, 3)), ])
bac.design <- design_crobes[-(which(rownames(design_crobes) %in% temp)), ]
design <- droplevels(bac.design)
CSIdata.in2 <- CSIdata.in2[-(which(rownames(CSIdata.in2) %in% temp)), ]
CSIdata.in2
CSIdata <- CSIdata.in2[, which(colSums(CSIdata.in2) >= 2)]
str(design)
View(design)
str(CSIdata.in2)
temp <- rownames(design_crobes[which(design_crobes$Number %in% c(1, 2, 3)), ])
bac.design <- design_crobes[-(which(rownames(design_crobes) %in% temp)), ]
design <- droplevels(bac.design)
CSIdata.in2 <- CSIdata.in2[-(which(rownames(CSIdata.in2) %in% temp)), ]
CSIdata.in2
str(CSIdata.in2)
